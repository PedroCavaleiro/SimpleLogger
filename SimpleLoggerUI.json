[{
  "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2508,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public struct PreFilledDataComponent&lt;Label, Value&gt; : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type> where <Type usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp\">Label<\/Type> : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type>, <Type usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp\">Value<\/Type> : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 839
          }
        ],
        "key.bodylength" : 1597,
        "key.bodyoffset" : 909,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A SwiftUI component that displays a label-value pair in a horizontal layout.\n\n`PreFilledDataComponent` is a generic view that presents two views side by side:\na label on the left and a value on the right, separated by a spacer. This component\nis useful for displaying key-value pairs, form fields, or any other data that needs\nto be presented in a structured horizontal format.\n\n## Usage\n\n```swift\nPreFilledDataComponent {\n    Text(\"Name:\")\n} value: {\n    Text(\"John Doe\")\n}\n```\n\n## Topics\n\n### Creating a PreFilled Data Component\n\n- ``init(label:value:)``\n\n### Views\n\n- ``body``",
        "key.doc.column" : 15,
        "key.doc.comment" : "A SwiftUI component that displays a label-value pair in a horizontal layout.\n\n`PreFilledDataComponent` is a generic view that presents two views side by side:\na label on the left and a value on the right, separated by a spacer. This component\nis useful for displaying key-value pairs, form fields, or any other data that needs\nto be presented in a structured horizontal format.\n\n## Usage\n\n```swift\nPreFilledDataComponent {\n    Text(\"Name:\")\n} value: {\n    Text(\"John Doe\")\n}\n```\n\n## Topics\n\n### Creating a PreFilled Data Component\n\n- ``init(label:value:)``\n\n### Views\n\n- ``body``",
        "key.doc.declaration" : "@MainActor public struct PreFilledDataComponent<Label, Value> : View where Label : View, Value : View",
        "key.doc.discussion" : [
          {
            "Para" : "`PreFilledDataComponent` is a generic view that presents two views side by side: a label on the left and a value on the right, separated by a spacer. This component is useful for displaying key-value pairs, form fields, or any other data that needs to be presented in a structured horizontal format."
          },
          {
            "CodeListing" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift\" line=\"38\" column=\"15\"><Name>PreFilledDataComponent<\/Name><USR>s:14SimpleLoggerUI22PreFilledDataComponentV<\/USR><Declaration>@MainActor public struct PreFilledDataComponent&lt;Label, Value&gt; : View where Label : View, Value : View<\/Declaration><CommentParts><Abstract><Para>A SwiftUI component that displays a label-value pair in a horizontal layout.<\/Para><\/Abstract><Discussion><Para><codeVoice>PreFilledDataComponent<\/codeVoice> is a generic view that presents two views side by side: a label on the left and a value on the right, separated by a spacer. This component is useful for displaying key-value pairs, form fields, or any other data that needs to be presented in a structured horizontal format.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Usage<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[PreFilledDataComponent {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Text(\"Name:\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} value: {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Text(\"John Doe\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Topics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Creating a PreFilled Data Component<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>init(label:value:)<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Views<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>body<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 38,
        "key.doc.name" : "PreFilledDataComponent",
        "key.doc.type" : "Class",
        "key.doclength" : 676,
        "key.docoffset" : 163,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 4,
            "key.offset" : 903
          }
        ],
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>PreFilledDataComponent<\/decl.name>&lt;<decl.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp\"><decl.generic_type_param.name>Label<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp\"><decl.generic_type_param.name>Value<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp\">Label<\/ref.generic_type_param> : <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp\">Value<\/ref.generic_type_param> : <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "View"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1661,
        "key.line" : 38,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "PreFilledDataComponent",
        "key.namelength" : 22,
        "key.nameoffset" : 853,
        "key.offset" : 846,
        "key.parsed_declaration" : "public struct PreFilledDataComponent<Label: View, Value: View>: View",
        "key.parsed_scope.end" : 86,
        "key.parsed_scope.start" : 38,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Label : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type><\/Declaration>",
            "key.column" : 38,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 4,
                "key.offset" : 883
              }
            ],
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Label<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "View"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 11,
            "key.line" : 38,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "Label",
            "key.namelength" : 5,
            "key.nameoffset" : 876,
            "key.offset" : 876,
            "key.parsed_declaration" : "public struct PreFilledDataComponent<Label: View",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.reusingastcontext" : false,
            "key.typename" : "Label.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>Value : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type><\/Declaration>",
            "key.column" : 51,
            "key.decl_lang" : "source.lang.swift",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 4,
                "key.offset" : 896
              }
            ],
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Value<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "View"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 11,
            "key.line" : 38,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "Value",
            "key.namelength" : 5,
            "key.nameoffset" : 889,
            "key.offset" : 889,
            "key.parsed_declaration" : "public struct PreFilledDataComponent<Label: View, Value: View",
            "key.parsed_scope.end" : 38,
            "key.parsed_scope.start" : 38,
            "key.reusingastcontext" : false,
            "key.typename" : "Value.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> let label: () -&gt; <Type usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp\">Label<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The view builder closure that creates the label content.",
            "key.doc.column" : 9,
            "key.doc.comment" : "The view builder closure that creates the label content.",
            "key.doc.declaration" : "@MainActor let label: () -> Label",
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift\" line=\"41\" column=\"9\"><Name>label<\/Name><USR>s:14SimpleLoggerUI22PreFilledDataComponentV5labelxycvp<\/USR><Declaration>@MainActor let label: () -&gt; Label<\/Declaration><CommentParts><Abstract><Para>The view builder closure that creates the label content.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 41,
            "key.doc.name" : "label",
            "key.doc.type" : "Other",
            "key.doclength" : 61,
            "key.docoffset" : 919,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>label<\/decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp\">Label<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.line" : 41,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "label",
            "key.namelength" : 5,
            "key.nameoffset" : 988,
            "key.offset" : 984,
            "key.parsed_declaration" : "let label: () -> Label",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 41,
            "key.reusingastcontext" : false,
            "key.typename" : "() -> Label",
            "key.typeusr" : "$sxycD",
            "key.usr" : "s:14SimpleLoggerUI22PreFilledDataComponentV5labelxycvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> let value: () -&gt; <Type usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp\">Value<\/Type><\/Declaration>",
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The view builder closure that creates the value content.",
            "key.doc.column" : 9,
            "key.doc.comment" : "The view builder closure that creates the value content.",
            "key.doc.declaration" : "@MainActor let value: () -> Value",
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift\" line=\"44\" column=\"9\"><Name>value<\/Name><USR>s:14SimpleLoggerUI22PreFilledDataComponentV5valueq_ycvp<\/USR><Declaration>@MainActor let value: () -&gt; Value<\/Declaration><CommentParts><Abstract><Para>The view builder closure that creates the value content.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 44,
            "key.doc.name" : "value",
            "key.doc.type" : "Other",
            "key.doclength" : 61,
            "key.docoffset" : 1016,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>value<\/decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.line" : 44,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "value",
            "key.namelength" : 5,
            "key.nameoffset" : 1085,
            "key.offset" : 1081,
            "key.parsed_declaration" : "let value: () -> Value",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 44,
            "key.reusingastcontext" : false,
            "key.typename" : "() -> Value",
            "key.typeusr" : "$sq_ycD",
            "key.usr" : "s:14SimpleLoggerUI22PreFilledDataComponentV5valueq_ycvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public init(label: @escaping () -&gt; <Type usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp\">Label<\/Type>, value: @escaping () -&gt; <Type usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp\">Value<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1903
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 1976,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Creates a new pre-filled data component with the specified label and value views.\n\nUse this initializer to create a component that displays a label on the left\nand a value on the right, with automatic spacing between them.\n\n- Parameters:\n  - label: A view builder closure that returns the label view to display on the left.\n  - value: A view builder closure that returns the value view to display on the right.\n\n## Example\n\n```swift\nPreFilledDataComponent {\n    HStack {\n        Image(systemName: \"person\")\n        Text(\"User\")\n    }\n} value: {\n    Text(\"admin@example.com\")\n        .foregroundColor(.secondary)\n}\n```",
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new pre-filled data component with the specified label and value views.\n\nUse this initializer to create a component that displays a label on the left\nand a value on the right, with automatic spacing between them.\n\n- Parameters:\n  - label: A view builder closure that returns the label view to display on the left.\n  - value: A view builder closure that returns the value view to display on the right.\n\n## Example\n\n```swift\nPreFilledDataComponent {\n    HStack {\n        Image(systemName: \"person\")\n        Text(\"User\")\n    }\n} value: {\n    Text(\"admin@example.com\")\n        .foregroundColor(.secondary)\n}\n```",
            "key.doc.declaration" : "@MainActor public init(label: @escaping () -> Label, value: @escaping () -> Value)",
            "key.doc.discussion" : [
              {
                "Para" : "Use this initializer to create a component that displays a label on the left and a value on the right, with automatic spacing between them."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift\" line=\"68\" column=\"12\"><Name>init(label:value:)<\/Name><USR>s:14SimpleLoggerUI22PreFilledDataComponentV5label5valueACyxq_Gxyc_q_yctcfc<\/USR><Declaration>@MainActor public init(label: @escaping () -&gt; Label, value: @escaping () -&gt; Value)<\/Declaration><CommentParts><Abstract><Para>Creates a new pre-filled data component with the specified label and value views.<\/Para><\/Abstract><Parameters><Parameter><Name>label<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A view builder closure that returns the label view to display on the left.<\/Para><\/Discussion><\/Parameter><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A view builder closure that returns the value view to display on the right.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>Use this initializer to create a component that displays a label on the left and a value on the right, with automatic spacing between them.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[PreFilledDataComponent {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    HStack {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Image(systemName: \"person\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Text(\"User\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} value: {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Text(\"admin@example.com\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .foregroundColor(.secondary)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 68,
            "key.doc.name" : "init(label:value:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A view builder closure that returns the label view to display on the left."
                  }
                ],
                "name" : "label"
              },
              {
                "discussion" : [
                  {
                    "Para" : "A view builder closure that returns the value view to display on the right."
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 786,
            "key.docoffset" : 1113,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Labelxmfp\">Label<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:14SimpleLoggerUI22PreFilledDataComponentV5Valueq_mfp\">Value<\/ref.generic_type_param><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 126,
            "key.line" : 68,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "init(label:value:)",
            "key.namelength" : 64,
            "key.nameoffset" : 1910,
            "key.offset" : 1910,
            "key.parsed_declaration" : "public init(label: @escaping () -> Label, value: @escaping () -> Value)",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 68,
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "<Label, Value where Label : View, Value : View> (PreFilledDataComponent<Label, Value>.Type) -> (@escaping () -> Label, @escaping () -> Value) -> PreFilledDataComponent<Label, Value>",
            "key.typeusr" : "$s5label5value14SimpleLoggerUI22PreFilledDataComponentVyxq_Gxyc_q_yctcD",
            "key.usr" : "s:14SimpleLoggerUI22PreFilledDataComponentV5label5valueACyxq_Gxyc_q_yctcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var body: some <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2362
              }
            ],
            "key.bodylength" : 109,
            "key.bodyoffset" : 2390,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The view body that renders the label and value in a horizontal stack.\n\nThe body creates an `HStack` containing the label view, a spacer for automatic\nspacing, and the value view. This ensures the label is left-aligned and the\nvalue is right-aligned within the available space.",
            "key.doc.column" : 16,
            "key.doc.comment" : "The view body that renders the label and value in a horizontal stack.\n\nThe body creates an `HStack` containing the label view, a spacer for automatic\nspacing, and the value view. This ensures the label is left-aligned and the\nvalue is right-aligned within the available space.",
            "key.doc.declaration" : "@MainActor public var body: some View { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The body creates an `HStack` containing the label view, a spacer for automatic spacing, and the value view. This ensures the label is left-aligned and the value is right-aligned within the available space."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift\" line=\"78\" column=\"16\"><Name>body<\/Name><USR>s:14SimpleLoggerUI22PreFilledDataComponentV4bodyQrvp<\/USR><Declaration>@MainActor public var body: some View { get }<\/Declaration><CommentParts><Abstract><Para>The view body that renders the label and value in a horizontal stack.<\/Para><\/Abstract><Discussion><Para>The body creates an <codeVoice>HStack<\/codeVoice> containing the label view, a spacer for automatic spacing, and the value view. This ensures the label is left-aligned and the value is right-aligned within the available space.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 78,
            "key.doc.name" : "body",
            "key.doc.type" : "Other",
            "key.doclength" : 312,
            "key.docoffset" : 2046,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Components\/PreFilledDataComponent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>body<\/decl.name>: <decl.var.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 131,
            "key.line" : 78,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "body",
            "key.namelength" : 4,
            "key.nameoffset" : 2373,
            "key.offset" : 2369,
            "key.overrides" : [
              {
                "key.usr" : "s:7SwiftUI4ViewP4body4BodyQzvp"
              }
            ],
            "key.parsed_declaration" : "public var body: some View",
            "key.parsed_scope.end" : 84,
            "key.parsed_scope.start" : 78,
            "key.reusingastcontext" : false,
            "key.typename" : "some View",
            "key.typeusr" : "$sQrD",
            "key.usr" : "s:14SimpleLoggerUI22PreFilledDataComponentV4bodyQrvp"
          }
        ],
        "key.typename" : "PreFilledDataComponent<Label, Value>.Type",
        "key.typeusr" : "$s14SimpleLoggerUI22PreFilledDataComponentVyxq_GmD",
        "key.usr" : "s:14SimpleLoggerUI22PreFilledDataComponentV"
      }
    ]
  }
}, {
  "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5322,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public protocol CustomFormField : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1185
          }
        ],
        "key.bodylength" : 986,
        "key.bodyoffset" : 1224,
        "key.column" : 17,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A protocol that defines the requirements for custom form fields in the SimpleLogger UI.\n\n`CustomFormField` allows you to create custom SwiftUI views that can be integrated\ninto forms while providing a standardized way to access their key identifier and current value.\nThis protocol is essential for building dynamic forms where field values need to be collected\nand processed uniformly.\n\n## Conforming to CustomFormField\n\nTo create a custom form field, implement both required properties:\n\n```swift\nstruct EmailField: CustomFormField {\n    @State private var email = \"\"\n    \n    var fieldKey: String { \"email\" }\n    var fieldValue: String { email }\n    \n    var body: some View {\n        TextField(\"Enter email\", text: $email)\n            .textFieldStyle(RoundedBorderTextFieldStyle())\n            .keyboardType(.emailAddress)\n    }\n}\n```\n\n## Topics\n\n### Required Properties\n\n- ``fieldKey``\n- ``fieldValue``",
        "key.doc.column" : 17,
        "key.doc.comment" : "A protocol that defines the requirements for custom form fields in the SimpleLogger UI.\n\n`CustomFormField` allows you to create custom SwiftUI views that can be integrated\ninto forms while providing a standardized way to access their key identifier and current value.\nThis protocol is essential for building dynamic forms where field values need to be collected\nand processed uniformly.\n\n## Conforming to CustomFormField\n\nTo create a custom form field, implement both required properties:\n\n```swift\nstruct EmailField: CustomFormField {\n    @State private var email = \"\"\n    \n    var fieldKey: String { \"email\" }\n    var fieldValue: String { email }\n    \n    var body: some View {\n        TextField(\"Enter email\", text: $email)\n            .textFieldStyle(RoundedBorderTextFieldStyle())\n            .keyboardType(.emailAddress)\n    }\n}\n```\n\n## Topics\n\n### Required Properties\n\n- ``fieldKey``\n- ``fieldValue``",
        "key.doc.declaration" : "@MainActor public protocol CustomFormField : View",
        "key.doc.discussion" : [
          {
            "Para" : "`CustomFormField` allows you to create custom SwiftUI views that can be integrated into forms while providing a standardized way to access their key identifier and current value. This protocol is essential for building dynamic forms where field values need to be collected and processed uniformly."
          },
          {
            "Para" : "To create a custom form field, implement both required properties:"
          },
          {
            "CodeListing" : ""
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"44\" column=\"17\"><Name>CustomFormField<\/Name><USR>s:14SimpleLoggerUI15CustomFormFieldP<\/USR><Declaration>@MainActor public protocol CustomFormField : View<\/Declaration><CommentParts><Abstract><Para>A protocol that defines the requirements for custom form fields in the SimpleLogger UI.<\/Para><\/Abstract><Discussion><Para><codeVoice>CustomFormField<\/codeVoice> allows you to create custom SwiftUI views that can be integrated into forms while providing a standardized way to access their key identifier and current value. This protocol is essential for building dynamic forms where field values need to be collected and processed uniformly.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Conforming to CustomFormField<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>To create a custom form field, implement both required properties:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct EmailField: CustomFormField {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    @State private var email = \"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var fieldKey: String { \"email\" }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var fieldValue: String { email }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var body: some View {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        TextField(\"Enter email\", text: $email)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .textFieldStyle(RoundedBorderTextFieldStyle())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .keyboardType(.emailAddress)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Topics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Required Properties<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>fieldKey<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>fieldValue<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 44,
        "key.doc.name" : "CustomFormField",
        "key.doc.type" : "Class",
        "key.doclength" : 1029,
        "key.docoffset" : 156,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 4,
            "key.offset" : 1218
          }
        ],
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>CustomFormField<\/decl.name> : <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "View"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 1019,
        "key.line" : 44,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "CustomFormField",
        "key.namelength" : 15,
        "key.nameoffset" : 1201,
        "key.offset" : 1192,
        "key.parsed_declaration" : "public protocol CustomFormField: View",
        "key.parsed_scope.end" : 75,
        "key.parsed_scope.start" : 44,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> var fieldKey: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 1654,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The unique key identifier for this form field.\n\nThis key is used to identify the field when collecting form data and should be\nunique within the context of a single form. The key is typically used as a\ndictionary key when processing form submissions.\n\n## Example\n\n```swift\nvar fieldKey: String { \"username\" }\n```",
            "key.doc.column" : 9,
            "key.doc.comment" : "The unique key identifier for this form field.\n\nThis key is used to identify the field when collecting form data and should be\nunique within the context of a single form. The key is typically used as a\ndictionary key when processing form submissions.\n\n## Example\n\n```swift\nvar fieldKey: String { \"username\" }\n```",
            "key.doc.declaration" : "@MainActor var fieldKey: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "This key is used to identify the field when collecting form data and should be unique within the context of a single form. The key is typically used as a dictionary key when processing form submissions."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"57\" column=\"9\"><Name>fieldKey<\/Name><USR>s:14SimpleLoggerUI15CustomFormFieldP8fieldKeySSvp<\/USR><Declaration>@MainActor var fieldKey: String { get }<\/Declaration><CommentParts><Abstract><Para>The unique key identifier for this form field.<\/Para><\/Abstract><Discussion><Para>This key is used to identify the field when collecting form data and should be unique within the context of a single form. The key is typically used as a dictionary key when processing form submissions.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var fieldKey: String { \"username\" }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 57,
            "key.doc.name" : "fieldKey",
            "key.doc.type" : "Other",
            "key.doclength" : 394,
            "key.docoffset" : 1234,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fieldKey<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.line" : 57,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "fieldKey",
            "key.namelength" : 8,
            "key.nameoffset" : 1636,
            "key.offset" : 1632,
            "key.parsed_declaration" : "var fieldKey: String",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 57,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI15CustomFormFieldP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI15CustomFormFieldP8fieldKeySSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> var fieldValue: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 2203,
            "key.column" : 9,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The current value of the field represented as a string.\n\nThis property should return the current state of the form field as a string,\nregardless of the internal data type. For complex data types, implement\nappropriate string conversion logic.\n\n## Example\n\n```swift\n@State private var selectedDate = Date()\n\nvar fieldValue: String { \n    DateFormatter.iso8601.string(from: selectedDate)\n}\n```",
            "key.doc.column" : 9,
            "key.doc.comment" : "The current value of the field represented as a string.\n\nThis property should return the current state of the form field as a string,\nregardless of the internal data type. For complex data types, implement\nappropriate string conversion logic.\n\n## Example\n\n```swift\n@State private var selectedDate = Date()\n\nvar fieldValue: String { \n    DateFormatter.iso8601.string(from: selectedDate)\n}\n```",
            "key.doc.declaration" : "@MainActor var fieldValue: String { get }",
            "key.doc.discussion" : [
              {
                "Para" : "This property should return the current state of the form field as a string, regardless of the internal data type. For complex data types, implement appropriate string conversion logic."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"74\" column=\"9\"><Name>fieldValue<\/Name><USR>s:14SimpleLoggerUI15CustomFormFieldP10fieldValueSSvp<\/USR><Declaration>@MainActor var fieldValue: String { get }<\/Declaration><CommentParts><Abstract><Para>The current value of the field represented as a string.<\/Para><\/Abstract><Discussion><Para>This property should return the current state of the form field as a string, regardless of the internal data type. For complex data types, implement appropriate string conversion logic.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[@State private var selectedDate = Date()]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var fieldValue: String { ]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    DateFormatter.iso8601.string(from: selectedDate)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 74,
            "key.doc.name" : "fieldValue",
            "key.doc.type" : "Other",
            "key.doclength" : 505,
            "key.docoffset" : 1670,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>fieldValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 74,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "fieldValue",
            "key.namelength" : 10,
            "key.nameoffset" : 2183,
            "key.offset" : 2179,
            "key.parsed_declaration" : "var fieldValue: String",
            "key.parsed_scope.end" : 74,
            "key.parsed_scope.start" : 74,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI15CustomFormFieldP"
              }
            ],
            "key.reusingastcontext" : false,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI15CustomFormFieldP10fieldValueSSvp"
          }
        ],
        "key.typename" : "CustomFormField.Type",
        "key.typeusr" : "$s14SimpleLoggerUI15CustomFormField_pmD",
        "key.usr" : "s:14SimpleLoggerUI15CustomFormFieldP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public struct CustomFormFieldWrapper<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3228
          },
          {
            "key.attribute" : "source.decl.attribute._custom",
            "key.length" : 10,
            "key.offset" : 3217
          }
        ],
        "key.bodylength" : 2054,
        "key.bodyoffset" : 3266,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A type-erased wrapper for custom form fields that handles state management and value extraction.\n\n`CustomFormFieldWrapper` provides a way to store and manage different types of custom form fields\nin a uniform manner. It encapsulates the field's view, key, and value extraction logic, allowing\ncollections of heterogeneous form fields to be handled consistently.\n\nThis wrapper is particularly useful when building dynamic forms where the number and types of\nfields may vary at runtime, or when you need to store form fields in collections.\n\n## Usage\n\n```swift\nlet emailField = EmailField()\nlet wrapper = CustomFormFieldWrapper(field: emailField)\n\n\/\/ Access the wrapped properties\nprint(wrapper.key)        \/\/ \"email\"\nprint(wrapper.getValue()) \/\/ Current email value\n```\n\n## Topics\n\n### Creating a Wrapper\n\n- ``init(field:)``\n\n### Accessing Field Data\n\n- ``key``\n- ``view``\n- ``getValue()``",
        "key.doc.column" : 15,
        "key.doc.comment" : "A type-erased wrapper for custom form fields that handles state management and value extraction.\n\n`CustomFormFieldWrapper` provides a way to store and manage different types of custom form fields\nin a uniform manner. It encapsulates the field's view, key, and value extraction logic, allowing\ncollections of heterogeneous form fields to be handled consistently.\n\nThis wrapper is particularly useful when building dynamic forms where the number and types of\nfields may vary at runtime, or when you need to store form fields in collections.\n\n## Usage\n\n```swift\nlet emailField = EmailField()\nlet wrapper = CustomFormFieldWrapper(field: emailField)\n\n\/\/ Access the wrapped properties\nprint(wrapper.key)        \/\/ \"email\"\nprint(wrapper.getValue()) \/\/ Current email value\n```\n\n## Topics\n\n### Creating a Wrapper\n\n- ``init(field:)``\n\n### Accessing Field Data\n\n- ``key``\n- ``view``\n- ``getValue()``",
        "key.doc.declaration" : "@MainActor public struct CustomFormFieldWrapper",
        "key.doc.discussion" : [
          {
            "Para" : "`CustomFormFieldWrapper` provides a way to store and manage different types of custom form fields in a uniform manner. It encapsulates the field’s view, key, and value extraction logic, allowing collections of heterogeneous form fields to be handled consistently."
          },
          {
            "Para" : "This wrapper is particularly useful when building dynamic forms where the number and types of fields may vary at runtime, or when you need to store form fields in collections."
          },
          {
            "CodeListing" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"109\" column=\"15\"><Name>CustomFormFieldWrapper<\/Name><USR>s:14SimpleLoggerUI22CustomFormFieldWrapperV<\/USR><Declaration>@MainActor public struct CustomFormFieldWrapper<\/Declaration><CommentParts><Abstract><Para>A type-erased wrapper for custom form fields that handles state management and value extraction.<\/Para><\/Abstract><Discussion><Para><codeVoice>CustomFormFieldWrapper<\/codeVoice> provides a way to store and manage different types of custom form fields in a uniform manner. It encapsulates the field’s view, key, and value extraction logic, allowing collections of heterogeneous form fields to be handled consistently.<\/Para><Para>This wrapper is particularly useful when building dynamic forms where the number and types of fields may vary at runtime, or when you need to store form fields in collections.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Usage<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let emailField = EmailField()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let wrapper = CustomFormFieldWrapper(field: emailField)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Access the wrapped properties]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(wrapper.key)        \/\/ \"email\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(wrapper.getValue()) \/\/ Current email value]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Topics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Creating a Wrapper<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>init(field:)<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Accessing Field Data<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>key<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>view<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>getValue()<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 109,
        "key.doc.name" : "CustomFormFieldWrapper",
        "key.doc.type" : "Class",
        "key.doclength" : 1004,
        "key.docoffset" : 2213,
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>CustomFormFieldWrapper<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2086,
        "key.line" : 109,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "CustomFormFieldWrapper",
        "key.namelength" : 22,
        "key.nameoffset" : 3242,
        "key.offset" : 3235,
        "key.parsed_declaration" : "public struct CustomFormFieldWrapper",
        "key.parsed_scope.end" : 162,
        "key.parsed_scope.start" : 109,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public let key: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3513
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The unique key identifier from the wrapped form field.\n\nThis property provides direct access to the `fieldKey` of the wrapped\n`CustomFormField` without needing to interact with the original field instance.",
            "key.doc.column" : 16,
            "key.doc.comment" : "The unique key identifier from the wrapped form field.\n\nThis property provides direct access to the `fieldKey` of the wrapped\n`CustomFormField` without needing to interact with the original field instance.",
            "key.doc.declaration" : "@MainActor public let key: String",
            "key.doc.discussion" : [
              {
                "Para" : "This property provides direct access to the `fieldKey` of the wrapped `CustomFormField` without needing to interact with the original field instance."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"115\" column=\"16\"><Name>key<\/Name><USR>s:14SimpleLoggerUI22CustomFormFieldWrapperV3keySSvp<\/USR><Declaration>@MainActor public let key: String<\/Declaration><CommentParts><Abstract><Para>The unique key identifier from the wrapped form field.<\/Para><\/Abstract><Discussion><Para>This property provides direct access to the <codeVoice>fieldKey<\/codeVoice> of the wrapped <codeVoice>CustomFormField<\/codeVoice> without needing to interact with the original field instance.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 115,
            "key.doc.name" : "key",
            "key.doc.type" : "Other",
            "key.doclength" : 233,
            "key.docoffset" : 3276,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>key<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 15,
            "key.line" : 115,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "key",
            "key.namelength" : 3,
            "key.nameoffset" : 3524,
            "key.offset" : 3520,
            "key.parsed_declaration" : "public let key: String",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 115,
            "key.reusingastcontext" : false,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI22CustomFormFieldWrapperV3keySSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public let view: <Type usr=\"s:7SwiftUI7AnyViewV\">AnyView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3869
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The type-erased SwiftUI view representation of the form field.\n\nThis property contains the visual representation of the form field, wrapped\nin an `AnyView` to allow storage of different field types in the same collection.\nUse this view when rendering the field in your form interface.",
            "key.doc.column" : 16,
            "key.doc.comment" : "The type-erased SwiftUI view representation of the form field.\n\nThis property contains the visual representation of the form field, wrapped\nin an `AnyView` to allow storage of different field types in the same collection.\nUse this view when rendering the field in your form interface.",
            "key.doc.declaration" : "@MainActor public let view: AnyView",
            "key.doc.discussion" : [
              {
                "Para" : "This property contains the visual representation of the form field, wrapped in an `AnyView` to allow storage of different field types in the same collection. Use this view when rendering the field in your form interface."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"122\" column=\"16\"><Name>view<\/Name><USR>s:14SimpleLoggerUI22CustomFormFieldWrapperV4view05SwiftC07AnyViewVvp<\/USR><Declaration>@MainActor public let view: AnyView<\/Declaration><CommentParts><Abstract><Para>The type-erased SwiftUI view representation of the form field.<\/Para><\/Abstract><Discussion><Para>This property contains the visual representation of the form field, wrapped in an <codeVoice>AnyView<\/codeVoice> to allow storage of different field types in the same collection. Use this view when rendering the field in your form interface.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 122,
            "key.doc.name" : "view",
            "key.doc.type" : "Other",
            "key.doclength" : 320,
            "key.docoffset" : 3545,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>view<\/decl.name>: <decl.var.type><ref.struct usr=\"s:7SwiftUI7AnyViewV\">AnyView<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 17,
            "key.line" : 122,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "view",
            "key.namelength" : 4,
            "key.nameoffset" : 3880,
            "key.offset" : 3876,
            "key.parsed_declaration" : "public let view: AnyView",
            "key.parsed_scope.end" : 122,
            "key.parsed_scope.start" : 122,
            "key.reusingastcontext" : false,
            "key.typename" : "AnyView",
            "key.typeusr" : "$s7SwiftUI7AnyViewVD",
            "key.usr" : "s:14SimpleLoggerUI22CustomFormFieldWrapperV4view05SwiftC07AnyViewVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public let getValue: () -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4219
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "A closure that returns the current value of the form field as a string.\n\nThis closure provides access to the field's current value without maintaining\na strong reference to the original field instance. Call this closure whenever\nyou need to retrieve the field's current state.",
            "key.doc.column" : 16,
            "key.doc.comment" : "A closure that returns the current value of the form field as a string.\n\nThis closure provides access to the field's current value without maintaining\na strong reference to the original field instance. Call this closure whenever\nyou need to retrieve the field's current state.",
            "key.doc.declaration" : "@MainActor public let getValue: () -> String",
            "key.doc.discussion" : [
              {
                "Para" : "This closure provides access to the field’s current value without maintaining a strong reference to the original field instance. Call this closure whenever you need to retrieve the field’s current state."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"129\" column=\"16\"><Name>getValue<\/Name><USR>s:14SimpleLoggerUI22CustomFormFieldWrapperV8getValueSSycvp<\/USR><Declaration>@MainActor public let getValue: () -&gt; String<\/Declaration><CommentParts><Abstract><Para>A closure that returns the current value of the form field as a string.<\/Para><\/Abstract><Discussion><Para>This closure provides access to the field’s current value without maintaining a strong reference to the original field instance. Call this closure whenever you need to retrieve the field’s current state.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 129,
            "key.doc.name" : "getValue",
            "key.doc.type" : "Other",
            "key.doclength" : 312,
            "key.docoffset" : 3903,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>getValue<\/decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 129,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "getValue",
            "key.namelength" : 8,
            "key.nameoffset" : 4230,
            "key.offset" : 4226,
            "key.parsed_declaration" : "public let getValue: () -> String",
            "key.parsed_scope.end" : 129,
            "key.parsed_scope.start" : 129,
            "key.reusingastcontext" : false,
            "key.typename" : "() -> String",
            "key.typeusr" : "$sSSycD",
            "key.usr" : "s:14SimpleLoggerUI22CustomFormFieldWrapperV8getValueSSycvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public init&lt;T&gt;(field: <Type usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc1TL_xmfp\">T<\/Type>) where <Type usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc1TL_xmfp\">T<\/Type> : <Type usr=\"s:14SimpleLoggerUI15CustomFormFieldP\">CustomFormField<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5156
              }
            ],
            "key.bodylength" : 119,
            "key.bodyoffset" : 5199,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Creates a new wrapper for the specified custom form field.\n\nThis initializer takes any view that conforms to `CustomFormField` and creates\na type-erased wrapper that can be stored alongside other wrapped fields regardless\nof their concrete types.\n\n- Parameter field: A view conforming to `CustomFormField` that will be wrapped.\n\n## Example\n\n```swift\nstruct AgeField: CustomFormField {\n    @State private var age = \"\"\n    \n    var fieldKey: String { \"age\" }\n    var fieldValue: String { age }\n    \n    var body: some View {\n        TextField(\"Age\", text: $age)\n            .keyboardType(.numberPad)\n    }\n}\n\nlet ageField = AgeField()\nlet wrapper = CustomFormFieldWrapper(field: ageField)\n```",
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new wrapper for the specified custom form field.\n\nThis initializer takes any view that conforms to `CustomFormField` and creates\na type-erased wrapper that can be stored alongside other wrapped fields regardless\nof their concrete types.\n\n- Parameter field: A view conforming to `CustomFormField` that will be wrapped.\n\n## Example\n\n```swift\nstruct AgeField: CustomFormField {\n    @State private var age = \"\"\n    \n    var fieldKey: String { \"age\" }\n    var fieldValue: String { age }\n    \n    var body: some View {\n        TextField(\"Age\", text: $age)\n            .keyboardType(.numberPad)\n    }\n}\n\nlet ageField = AgeField()\nlet wrapper = CustomFormFieldWrapper(field: ageField)\n```",
            "key.doc.declaration" : "@MainActor public init<T>(field: T) where T : SimpleLoggerUI.CustomFormField",
            "key.doc.discussion" : [
              {
                "Para" : "This initializer takes any view that conforms to `CustomFormField` and creates a type-erased wrapper that can be stored alongside other wrapped fields regardless of their concrete types."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift\" line=\"157\" column=\"12\"><Name>init(field:)<\/Name><USR>s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc<\/USR><Declaration>@MainActor public init&lt;T&gt;(field: T) where T : SimpleLoggerUI.CustomFormField<\/Declaration><CommentParts><Abstract><Para>Creates a new wrapper for the specified custom form field.<\/Para><\/Abstract><Parameters><Parameter><Name>field<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A view conforming to <codeVoice>CustomFormField<\/codeVoice> that will be wrapped.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This initializer takes any view that conforms to <codeVoice>CustomFormField<\/codeVoice> and creates a type-erased wrapper that can be stored alongside other wrapped fields regardless of their concrete types.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct AgeField: CustomFormField {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    @State private var age = \"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var fieldKey: String { \"age\" }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var fieldValue: String { age }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var body: some View {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        TextField(\"Age\", text: $age)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            .keyboardType(.numberPad)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let ageField = AgeField()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let wrapper = CustomFormFieldWrapper(field: ageField)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 157,
            "key.doc.name" : "init(field:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A view conforming to `CustomFormField` that will be wrapped."
                  }
                ],
                "name" : "field"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 890,
            "key.docoffset" : 4262,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc1TL_xmfp\"><decl.generic_type_param.name>T<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>field<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc1TL_xmfp\">T<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc1TL_xmfp\">T<\/ref.generic_type_param> : <ref.protocol usr=\"s:14SimpleLoggerUI15CustomFormFieldP\">CustomFormField<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 156,
            "key.line" : 157,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "init(field:)",
            "key.namelength" : 34,
            "key.nameoffset" : 5163,
            "key.offset" : 5163,
            "key.parsed_declaration" : "public init<T: CustomFormField>(field: T)",
            "key.parsed_scope.end" : 161,
            "key.parsed_scope.start" : 157,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>T : <Type usr=\"s:14SimpleLoggerUI15CustomFormFieldP\">CustomFormField<\/Type><\/Declaration>",
                "key.column" : 17,
                "key.decl_lang" : "source.lang.swift",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 15,
                    "key.offset" : 5171
                  }
                ],
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/CustomFormField.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>T<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:14SimpleLoggerUI15CustomFormFieldP\">CustomFormField<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "CustomFormField"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 18,
                "key.line" : 157,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "T",
                "key.namelength" : 1,
                "key.nameoffset" : 5168,
                "key.offset" : 5168,
                "key.parsed_declaration" : "public init<T: CustomFormField",
                "key.parsed_scope.end" : 157,
                "key.parsed_scope.start" : 157,
                "key.reusingastcontext" : false,
                "key.typename" : "T.Type",
                "key.typeusr" : "$sxmD",
                "key.usr" : "s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc1TL_xmfp"
              }
            ],
            "key.typename" : "<T where T : CustomFormField> (CustomFormFieldWrapper.Type) -> (T) -> CustomFormFieldWrapper",
            "key.typeusr" : "$s5field14SimpleLoggerUI22CustomFormFieldWrapperVx_tcAB0efG0RzluD",
            "key.usr" : "s:14SimpleLoggerUI22CustomFormFieldWrapperV5fieldACx_tcAA0deF0Rzlufc"
          }
        ],
        "key.typename" : "CustomFormFieldWrapper.Type",
        "key.typeusr" : "$s14SimpleLoggerUI22CustomFormFieldWrapperVmD",
        "key.usr" : "s:14SimpleLoggerUI22CustomFormFieldWrapperV"
      }
    ]
  }
}, {
  "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 23672,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public class ReporterViewConfiguration : <Type usr=\"s:10Foundation16ObservableObjecta\">ObservableObject<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 4209
          },
          {
            "key.attribute" : "source.decl.attribute._custom",
            "key.length" : 10,
            "key.offset" : 4198
          }
        ],
        "key.bodylength" : 19403,
        "key.bodyoffset" : 4267,
        "key.column" : 14,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A configuration class that defines the appearance and behavior of the bug reporter view.\n\n`ReporterViewConfiguration` is an `ObservableObject` that provides comprehensive customization\noptions for the bug reporting interface. It allows you to configure section headers, footers,\nplaceholder text, pre-filled data, custom form fields, automatic device information inclusion,\nlog files information display, and send report functionality.\n\n## Overview\n\nThe configuration is divided into several functional areas:\n- **Navigation and UI Text**: Customize titles, headers, and footers\n- **Pre-filled Data**: Automatically include device and app information\n- **Custom Form Fields**: Add additional input fields as needed\n- **Log Files Information**: Display and include log file details\n- **Send Report Action**: Configure report submission behavior and button text\n- **Behavior Control**: Toggle visibility and inclusion of various sections\n\n## Usage\n\n### Basic Configuration\n\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Report Bug\",\n    bgSectionHeader: \"What happened?\",\n    showPrefilledDataSection: true,\n    showLogFilesInformation: true,\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        print(\"Issue: \\(issueText)\")\n        \/\/ Process the collected data and send the report\n    }\n)\n```\n\n### Advanced Configuration with Custom Send Action\n\n```swift\nlet config = ReporterViewConfiguration(\n    customFields: [CustomFormFieldWrapper(field: EmailFormField())],\n    includeAppVersion: true,\n    includeDeviceModel: true,\n    showLogFilesInformation: true,\n    sendAction: { issueText, preFilledData, customFields, logStats in\n        \/\/ Custom report submission logic\n        MyBugReportAPI.submit(\n            description: issueText,\n            deviceInfo: preFilledData,\n            additionalFields: customFields,\n            logInfo: logStats\n        )\n    },\n    sendButtonText: \"Submit Report\"\n)\n```\n\n## Important\nThe `sendAction` closure is required for the reporter view to function properly.\nThere is no default send report implementation - you must provide your own custom\naction to handle report submission.\n\n## Topics\n\n### Creating a Configuration\n\n- ``init(navigationBarTitle:bgSectionHeader:bgSectionFooter:bgPlaceholderText:showPrefilledDataSection:sendPreFilledData:preFilledDataSectionHeader:preFilledDataSectionFooter:preFilledData:preFilledDataComponentBuilder:customFields:customFieldsSectionHeader:customFieldsSectionFooter:showLogFilesInformation:logFilesInformationSectionHeader:logFilesInformationSectionFooter:logFilesInformationComponentBuilder:sendAction:sendButtonText:snapshotObjects:includeAppVersion:includeDeviceOS:includeDeviceModel:)``\n\n### Navigation Configuration\n\n- ``navigationBarTitle``\n\n### Bug Description Section\n\n- ``bgSectionHeader``\n- ``bgSectionFooter``\n- ``bgPlaceholderText``\n\n### Pre-filled Data Section\n\n- ``showPrefilledDataSection``\n- ``sendPreFilledData``\n- ``preFilledDataSectionHeader``\n- ``preFilledDataSectionFooter``\n- ``preFilledData``\n- ``preFilledDataComponentBuilder``\n\n### Custom Form Fields\n\n- ``customFields``\n- ``customFieldsSectionHeader``\n- ``customFieldsSectionFooter``\n\n### Log Files Information\n\n- ``showLogFilesInformation``\n- ``logFilesInformationSectionHeader``\n- ``logFilesInformationSectionFooter``\n- ``logFilesInformationComponentBuilder``\n\n### Send Report Configuration\n\n- ``sendAction``\n- ``sendButtonText``\n- ``snapshotObjects``\n\n### Data Retrieval\n\n- ``getCustomFieldValues()``",
        "key.doc.column" : 14,
        "key.doc.comment" : "A configuration class that defines the appearance and behavior of the bug reporter view.\n\n`ReporterViewConfiguration` is an `ObservableObject` that provides comprehensive customization\noptions for the bug reporting interface. It allows you to configure section headers, footers,\nplaceholder text, pre-filled data, custom form fields, automatic device information inclusion,\nlog files information display, and send report functionality.\n\n## Overview\n\nThe configuration is divided into several functional areas:\n- **Navigation and UI Text**: Customize titles, headers, and footers\n- **Pre-filled Data**: Automatically include device and app information\n- **Custom Form Fields**: Add additional input fields as needed\n- **Log Files Information**: Display and include log file details\n- **Send Report Action**: Configure report submission behavior and button text\n- **Behavior Control**: Toggle visibility and inclusion of various sections\n\n## Usage\n\n### Basic Configuration\n\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Report Bug\",\n    bgSectionHeader: \"What happened?\",\n    showPrefilledDataSection: true,\n    showLogFilesInformation: true,\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        print(\"Issue: \\(issueText)\")\n        \/\/ Process the collected data and send the report\n    }\n)\n```\n\n### Advanced Configuration with Custom Send Action\n\n```swift\nlet config = ReporterViewConfiguration(\n    customFields: [CustomFormFieldWrapper(field: EmailFormField())],\n    includeAppVersion: true,\n    includeDeviceModel: true,\n    showLogFilesInformation: true,\n    sendAction: { issueText, preFilledData, customFields, logStats in\n        \/\/ Custom report submission logic\n        MyBugReportAPI.submit(\n            description: issueText,\n            deviceInfo: preFilledData,\n            additionalFields: customFields,\n            logInfo: logStats\n        )\n    },\n    sendButtonText: \"Submit Report\"\n)\n```\n\n## Important\nThe `sendAction` closure is required for the reporter view to function properly.\nThere is no default send report implementation - you must provide your own custom\naction to handle report submission.\n\n## Topics\n\n### Creating a Configuration\n\n- ``init(navigationBarTitle:bgSectionHeader:bgSectionFooter:bgPlaceholderText:showPrefilledDataSection:sendPreFilledData:preFilledDataSectionHeader:preFilledDataSectionFooter:preFilledData:preFilledDataComponentBuilder:customFields:customFieldsSectionHeader:customFieldsSectionFooter:showLogFilesInformation:logFilesInformationSectionHeader:logFilesInformationSectionFooter:logFilesInformationComponentBuilder:sendAction:sendButtonText:snapshotObjects:includeAppVersion:includeDeviceOS:includeDeviceModel:)``\n\n### Navigation Configuration\n\n- ``navigationBarTitle``\n\n### Bug Description Section\n\n- ``bgSectionHeader``\n- ``bgSectionFooter``\n- ``bgPlaceholderText``\n\n### Pre-filled Data Section\n\n- ``showPrefilledDataSection``\n- ``sendPreFilledData``\n- ``preFilledDataSectionHeader``\n- ``preFilledDataSectionFooter``\n- ``preFilledData``\n- ``preFilledDataComponentBuilder``\n\n### Custom Form Fields\n\n- ``customFields``\n- ``customFieldsSectionHeader``\n- ``customFieldsSectionFooter``\n\n### Log Files Information\n\n- ``showLogFilesInformation``\n- ``logFilesInformationSectionHeader``\n- ``logFilesInformationSectionFooter``\n- ``logFilesInformationComponentBuilder``\n\n### Send Report Configuration\n\n- ``sendAction``\n- ``sendButtonText``\n- ``snapshotObjects``\n\n### Data Retrieval\n\n- ``getCustomFieldValues()``",
        "key.doc.declaration" : "@MainActor public class ReporterViewConfiguration : ObservableObject",
        "key.doc.discussion" : [
          {
            "Para" : "`ReporterViewConfiguration` is an `ObservableObject` that provides comprehensive customization options for the bug reporting interface. It allows you to configure section headers, footers, placeholder text, pre-filled data, custom form fields, automatic device information inclusion, log files information display, and send report functionality."
          },
          {
            "Para" : "The configuration is divided into several functional areas:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "CodeListing" : ""
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `sendAction` closure is required for the reporter view to function properly. There is no default send report implementation - you must provide your own custom action to handle report submission."
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"127\" column=\"14\"><Name>ReporterViewConfiguration<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC<\/USR><Declaration>@MainActor public class ReporterViewConfiguration : ObservableObject<\/Declaration><CommentParts><Abstract><Para>A configuration class that defines the appearance and behavior of the bug reporter view.<\/Para><\/Abstract><Discussion><Para><codeVoice>ReporterViewConfiguration<\/codeVoice> is an <codeVoice>ObservableObject<\/codeVoice> that provides comprehensive customization options for the bug reporting interface. It allows you to configure section headers, footers, placeholder text, pre-filled data, custom form fields, automatic device information inclusion, log files information display, and send report functionality.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Overview<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The configuration is divided into several functional areas:<\/Para><List-Bullet><Item><Para><bold>Navigation and UI Text<\/bold>: Customize titles, headers, and footers<\/Para><\/Item><Item><Para><bold>Pre-filled Data<\/bold>: Automatically include device and app information<\/Para><\/Item><Item><Para><bold>Custom Form Fields<\/bold>: Add additional input fields as needed<\/Para><\/Item><Item><Para><bold>Log Files Information<\/bold>: Display and include log file details<\/Para><\/Item><Item><Para><bold>Send Report Action<\/bold>: Configure report submission behavior and button text<\/Para><\/Item><Item><Para><bold>Behavior Control<\/bold>: Toggle visibility and inclusion of various sections<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Usage<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Basic Configuration<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    navigationBarTitle: \"Report Bug\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    bgSectionHeader: \"What happened?\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showPrefilledDataSection: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showLogFilesInformation: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    sendAction: { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Handle the bug report submission]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Issue: \\(issueText)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Process the collected data and send the report]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h3>]]><\/rawHTML>Advanced Configuration with Custom Send Action<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    customFields: [CustomFormFieldWrapper(field: EmailFormField())],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    includeAppVersion: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    includeDeviceModel: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showLogFilesInformation: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    sendAction: { issueText, preFilledData, customFields, logStats in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Custom report submission logic]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        MyBugReportAPI.submit(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            description: issueText,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            deviceInfo: preFilledData,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            additionalFields: customFields,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            logInfo: logStats]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        )]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    },]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    sendButtonText: \"Submit Report\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Important<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The <codeVoice>sendAction<\/codeVoice> closure is required for the reporter view to function properly. There is no default send report implementation - you must provide your own custom action to handle report submission.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Topics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Creating a Configuration<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>init(navigationBarTitle:bgSectionHeader:bgSectionFooter:bgPlaceholderText:showPrefilledDataSection:sendPreFilledData:preFilledDataSectionHeader:preFilledDataSectionFooter:preFilledData:preFilledDataComponentBuilder:customFields:customFieldsSectionHeader:customFieldsSectionFooter:showLogFilesInformation:logFilesInformationSectionHeader:logFilesInformationSectionFooter:logFilesInformationComponentBuilder:sendAction:sendButtonText:snapshotObjects:includeAppVersion:includeDeviceOS:includeDeviceModel:)<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Navigation Configuration<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>navigationBarTitle<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Bug Description Section<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>bgSectionHeader<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>bgSectionFooter<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>bgPlaceholderText<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Pre-filled Data Section<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>showPrefilledDataSection<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>sendPreFilledData<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>preFilledDataSectionHeader<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>preFilledDataSectionFooter<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>preFilledData<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>preFilledDataComponentBuilder<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Custom Form Fields<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>customFields<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>customFieldsSectionHeader<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>customFieldsSectionFooter<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Log Files Information<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>showLogFilesInformation<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>logFilesInformationSectionHeader<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>logFilesInformationSectionFooter<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>logFilesInformationComponentBuilder<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Send Report Configuration<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>sendAction<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>sendButtonText<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>snapshotObjects<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>Data Retrieval<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>getCustomFieldValues()<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 127,
        "key.doc.name" : "ReporterViewConfiguration",
        "key.doc.type" : "Class",
        "key.doclength" : 3964,
        "key.docoffset" : 234,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 16,
            "key.offset" : 4249
          }
        ],
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>ReporterViewConfiguration<\/decl.name> : <ref.typealias usr=\"s:10Foundation16ObservableObjecta\">ObservableObject<\/ref.typealias><\/decl.class>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ObservableObject"
          }
        ],
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 19455,
        "key.line" : 127,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "ReporterViewConfiguration",
        "key.namelength" : 25,
        "key.nameoffset" : 4222,
        "key.offset" : 4216,
        "key.parsed_declaration" : "public class ReporterViewConfiguration: ObservableObject",
        "key.parsed_scope.end" : 578,
        "key.parsed_scope.start" : 127,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var navigationBarTitle: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4579
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The title displayed in the navigation bar of the reporter view.\n\nThis text appears at the top of the bug reporting interface and should clearly\nindicate the purpose of the view to users.\n\n## Default Value\n```swift\n\"Report a Issue\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The title displayed in the navigation bar of the reporter view.\n\nThis text appears at the top of the bug reporting interface and should clearly\nindicate the purpose of the view to users.\n\n## Default Value\n```swift\n\"Report a Issue\"\n```",
            "key.doc.declaration" : "@MainActor public var navigationBarTitle: String",
            "key.doc.discussion" : [
              {
                "Para" : "This text appears at the top of the bug reporting interface and should clearly indicate the purpose of the view to users."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"138\" column=\"16\"><Name>navigationBarTitle<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC18navigationBarTitleSSvp<\/USR><Declaration>@MainActor public var navigationBarTitle: String<\/Declaration><CommentParts><Abstract><Para>The title displayed in the navigation bar of the reporter view.<\/Para><\/Abstract><Discussion><Para>This text appears at the top of the bug reporting interface and should clearly indicate the purpose of the view to users.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Report a Issue\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 138,
            "key.doc.name" : "navigationBarTitle",
            "key.doc.type" : "Other",
            "key.doclength" : 301,
            "key.docoffset" : 4274,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>navigationBarTitle<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.line" : 138,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "navigationBarTitle",
            "key.namelength" : 18,
            "key.nameoffset" : 4590,
            "key.offset" : 4586,
            "key.parsed_declaration" : "public var navigationBarTitle: String",
            "key.parsed_scope.end" : 138,
            "key.parsed_scope.start" : 138,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC18navigationBarTitleSSvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 31,
            "key.name" : "MARK: - Bug Description Section",
            "key.offset" : 4629
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var bgSectionHeader: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5020
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The header text for the bug description section.\n\nThis text appears above the main text input area where users describe their issue.\nIt should prompt users to provide detailed information about the problem they're experiencing.\n\n## Default Value\n```swift\n\"Describe the issue\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The header text for the bug description section.\n\nThis text appears above the main text input area where users describe their issue.\nIt should prompt users to provide detailed information about the problem they're experiencing.\n\n## Default Value\n```swift\n\"Describe the issue\"\n```",
            "key.doc.declaration" : "@MainActor public var bgSectionHeader: String",
            "key.doc.discussion" : [
              {
                "Para" : "This text appears above the main text input area where users describe their issue. It should prompt users to provide detailed information about the problem they’re experiencing."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"151\" column=\"16\"><Name>bgSectionHeader<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC15bgSectionHeaderSSvp<\/USR><Declaration>@MainActor public var bgSectionHeader: String<\/Declaration><CommentParts><Abstract><Para>The header text for the bug description section.<\/Para><\/Abstract><Discussion><Para>This text appears above the main text input area where users describe their issue. It should prompt users to provide detailed information about the problem they’re experiencing.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Describe the issue\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 151,
            "key.doc.name" : "bgSectionHeader",
            "key.doc.type" : "Other",
            "key.doclength" : 346,
            "key.docoffset" : 4670,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bgSectionHeader<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 151,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "bgSectionHeader",
            "key.namelength" : 15,
            "key.nameoffset" : 5031,
            "key.offset" : 5027,
            "key.parsed_declaration" : "public var bgSectionHeader: String",
            "key.parsed_scope.end" : 151,
            "key.parsed_scope.start" : 151,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC15bgSectionHeaderSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var bgSectionFooter: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5457
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The footer text for the bug description section.\n\nThis explanatory text appears below the section header to provide additional guidance\nto users about what kind of information they should include in their bug report.\n\n## Default Value\n```swift\n\"Please provide a detailed description of the issue you are experiencing.\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The footer text for the bug description section.\n\nThis explanatory text appears below the section header to provide additional guidance\nto users about what kind of information they should include in their bug report.\n\n## Default Value\n```swift\n\"Please provide a detailed description of the issue you are experiencing.\"\n```",
            "key.doc.declaration" : "@MainActor public var bgSectionFooter: String",
            "key.doc.discussion" : [
              {
                "Para" : "This explanatory text appears below the section header to provide additional guidance to users about what kind of information they should include in their bug report."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"162\" column=\"16\"><Name>bgSectionFooter<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC15bgSectionFooterSSvp<\/USR><Declaration>@MainActor public var bgSectionFooter: String<\/Declaration><CommentParts><Abstract><Para>The footer text for the bug description section.<\/Para><\/Abstract><Discussion><Para>This explanatory text appears below the section header to provide additional guidance to users about what kind of information they should include in their bug report.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Please provide a detailed description of the issue you are experiencing.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 162,
            "key.doc.name" : "bgSectionFooter",
            "key.doc.type" : "Other",
            "key.doclength" : 389,
            "key.docoffset" : 5064,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bgSectionFooter<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 162,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "bgSectionFooter",
            "key.namelength" : 15,
            "key.nameoffset" : 5468,
            "key.offset" : 5464,
            "key.parsed_declaration" : "public var bgSectionFooter: String",
            "key.parsed_scope.end" : 162,
            "key.parsed_scope.start" : 162,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC15bgSectionFooterSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var bgPlaceholderText: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5852
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The placeholder text displayed in the bug description text field.\n\nThis text appears inside the text input field when it's empty, providing a hint\nabout what users should enter. It disappears when the user starts typing.\n\n## Default Value\n```swift\n\"Bug description (optional)\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The placeholder text displayed in the bug description text field.\n\nThis text appears inside the text input field when it's empty, providing a hint\nabout what users should enter. It disappears when the user starts typing.\n\n## Default Value\n```swift\n\"Bug description (optional)\"\n```",
            "key.doc.declaration" : "@MainActor public var bgPlaceholderText: String",
            "key.doc.discussion" : [
              {
                "Para" : "This text appears inside the text input field when it’s empty, providing a hint about what users should enter. It disappears when the user starts typing."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"173\" column=\"16\"><Name>bgPlaceholderText<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC17bgPlaceholderTextSSvp<\/USR><Declaration>@MainActor public var bgPlaceholderText: String<\/Declaration><CommentParts><Abstract><Para>The placeholder text displayed in the bug description text field.<\/Para><\/Abstract><Discussion><Para>This text appears inside the text input field when it’s empty, providing a hint about what users should enter. It disappears when the user starts typing.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Bug description (optional)\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 173,
            "key.doc.name" : "bgPlaceholderText",
            "key.doc.type" : "Other",
            "key.doclength" : 347,
            "key.docoffset" : 5501,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>bgPlaceholderText<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.line" : 173,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "bgPlaceholderText",
            "key.namelength" : 17,
            "key.nameoffset" : 5863,
            "key.offset" : 5859,
            "key.parsed_declaration" : "public var bgPlaceholderText: String",
            "key.parsed_scope.end" : 173,
            "key.parsed_scope.start" : 173,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC17bgPlaceholderTextSSvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 79,
            "key.name" : "MARK: - Auto Included Data (this data is appended but not editable by the user)",
            "key.offset" : 5901
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var showPrefilledDataSection: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6409
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Controls whether the pre-filled data section is visible to users.\n\nWhen `true`, users can see the automatically collected device and app information\nin a dedicated section. When `false`, this section is hidden from view, though\nthe data may still be included in the report based on ``sendPreFilledData``.\n\n## Default Value\n```swift\ntrue\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "Controls whether the pre-filled data section is visible to users.\n\nWhen `true`, users can see the automatically collected device and app information\nin a dedicated section. When `false`, this section is hidden from view, though\nthe data may still be included in the report based on ``sendPreFilledData``.\n\n## Default Value\n```swift\ntrue\n```",
            "key.doc.declaration" : "@MainActor public var showPrefilledDataSection: Bool",
            "key.doc.discussion" : [
              {
                "Para" : "When `true`, users can see the automatically collected device and app information in a dedicated section. When `false`, this section is hidden from view, though the data may still be included in the report based on `sendPreFilledData`."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"187\" column=\"16\"><Name>showPrefilledDataSection<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC24showPrefilledDataSectionSbvp<\/USR><Declaration>@MainActor public var showPrefilledDataSection: Bool<\/Declaration><CommentParts><Abstract><Para>Controls whether the pre-filled data section is visible to users.<\/Para><\/Abstract><Discussion><Para>When <codeVoice>true<\/codeVoice>, users can see the automatically collected device and app information in a dedicated section. When <codeVoice>false<\/codeVoice>, this section is hidden from view, though the data may still be included in the report based on <codeVoice>sendPreFilledData<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 187,
            "key.doc.name" : "showPrefilledDataSection",
            "key.doc.type" : "Other",
            "key.doclength" : 415,
            "key.docoffset" : 5990,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>showPrefilledDataSection<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 34,
            "key.line" : 187,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "showPrefilledDataSection",
            "key.namelength" : 24,
            "key.nameoffset" : 6420,
            "key.offset" : 6416,
            "key.parsed_declaration" : "public var showPrefilledDataSection: Bool",
            "key.parsed_scope.end" : 187,
            "key.parsed_scope.start" : 187,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC24showPrefilledDataSectionSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var sendPreFilledData: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6823
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Controls whether pre-filled data is included in the bug report submission.\n\nWhen `true`, the automatically collected information (device model, OS version, app version)\nis included when the report is submitted. When `false`, only user-entered data is sent.\n\n## Default Value\n```swift\ntrue\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "Controls whether pre-filled data is included in the bug report submission.\n\nWhen `true`, the automatically collected information (device model, OS version, app version)\nis included when the report is submitted. When `false`, only user-entered data is sent.\n\n## Default Value\n```swift\ntrue\n```",
            "key.doc.declaration" : "@MainActor public var sendPreFilledData: Bool",
            "key.doc.discussion" : [
              {
                "Para" : "When `true`, the automatically collected information (device model, OS version, app version) is included when the report is submitted. When `false`, only user-entered data is sent."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"198\" column=\"16\"><Name>sendPreFilledData<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC17sendPreFilledDataSbvp<\/USR><Declaration>@MainActor public var sendPreFilledData: Bool<\/Declaration><CommentParts><Abstract><Para>Controls whether pre-filled data is included in the bug report submission.<\/Para><\/Abstract><Discussion><Para>When <codeVoice>true<\/codeVoice>, the automatically collected information (device model, OS version, app version) is included when the report is submitted. When <codeVoice>false<\/codeVoice>, only user-entered data is sent.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 198,
            "key.doc.name" : "sendPreFilledData",
            "key.doc.type" : "Other",
            "key.doclength" : 359,
            "key.docoffset" : 6460,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sendPreFilledData<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 27,
            "key.line" : 198,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "sendPreFilledData",
            "key.namelength" : 17,
            "key.nameoffset" : 6834,
            "key.offset" : 6830,
            "key.parsed_declaration" : "public var sendPreFilledData: Bool",
            "key.parsed_scope.end" : 198,
            "key.parsed_scope.start" : 198,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC17sendPreFilledDataSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var preFilledDataSectionHeader: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7192
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The header text for the pre-filled data section.\n\nThis text appears above the list of automatically collected device and app information.\nIt should clearly identify what type of information is being displayed.\n\n## Default Value\n```swift\n\"Information\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The header text for the pre-filled data section.\n\nThis text appears above the list of automatically collected device and app information.\nIt should clearly identify what type of information is being displayed.\n\n## Default Value\n```swift\n\"Information\"\n```",
            "key.doc.declaration" : "@MainActor public var preFilledDataSectionHeader: String",
            "key.doc.discussion" : [
              {
                "Para" : "This text appears above the list of automatically collected device and app information. It should clearly identify what type of information is being displayed."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"209\" column=\"16\"><Name>preFilledDataSectionHeader<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC26preFilledDataSectionHeaderSSvp<\/USR><Declaration>@MainActor public var preFilledDataSectionHeader: String<\/Declaration><CommentParts><Abstract><Para>The header text for the pre-filled data section.<\/Para><\/Abstract><Discussion><Para>This text appears above the list of automatically collected device and app information. It should clearly identify what type of information is being displayed.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Information\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 209,
            "key.doc.name" : "preFilledDataSectionHeader",
            "key.doc.type" : "Other",
            "key.doclength" : 321,
            "key.docoffset" : 6867,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>preFilledDataSectionHeader<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.line" : 209,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "preFilledDataSectionHeader",
            "key.namelength" : 26,
            "key.nameoffset" : 7203,
            "key.offset" : 7199,
            "key.parsed_declaration" : "public var preFilledDataSectionHeader: String",
            "key.parsed_scope.end" : 209,
            "key.parsed_scope.start" : 209,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC26preFilledDataSectionHeaderSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var preFilledDataSectionFooter: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 7609
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The footer text for the pre-filled data section.\n\nThis explanatory text appears below the pre-filled data to inform users that\nthis information will be automatically included in their bug report.\n\n## Default Value\n```swift\n\"The information above is automatically included in the report.\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The footer text for the pre-filled data section.\n\nThis explanatory text appears below the pre-filled data to inform users that\nthis information will be automatically included in their bug report.\n\n## Default Value\n```swift\n\"The information above is automatically included in the report.\"\n```",
            "key.doc.declaration" : "@MainActor public var preFilledDataSectionFooter: String",
            "key.doc.discussion" : [
              {
                "Para" : "This explanatory text appears below the pre-filled data to inform users that this information will be automatically included in their bug report."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"220\" column=\"16\"><Name>preFilledDataSectionFooter<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC26preFilledDataSectionFooterSSvp<\/USR><Declaration>@MainActor public var preFilledDataSectionFooter: String<\/Declaration><CommentParts><Abstract><Para>The footer text for the pre-filled data section.<\/Para><\/Abstract><Discussion><Para>This explanatory text appears below the pre-filled data to inform users that this information will be automatically included in their bug report.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"The information above is automatically included in the report.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 220,
            "key.doc.name" : "preFilledDataSectionFooter",
            "key.doc.type" : "Other",
            "key.doclength" : 358,
            "key.docoffset" : 7247,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>preFilledDataSectionFooter<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 38,
            "key.line" : 220,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "preFilledDataSectionFooter",
            "key.namelength" : 26,
            "key.nameoffset" : 7620,
            "key.offset" : 7616,
            "key.parsed_declaration" : "public var preFilledDataSectionFooter: String",
            "key.parsed_scope.end" : 220,
            "key.parsed_scope.start" : 220,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC26preFilledDataSectionFooterSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var preFilledData: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 8177
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "A dictionary containing key-value pairs of pre-filled information.\n\nThis dictionary stores automatically collected device and app information that\ncan be included in bug reports. Keys typically include \"App Version\", \"Device Model\",\nand \"OS Version\", but can be customized as needed.\n\n## Example\n```swift\n[\n    \"App Version\": \"1.2.3\",\n    \"Device Model\": \"iPhone 14 Pro\",\n    \"OS Version\": \"16.0\"\n]\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "A dictionary containing key-value pairs of pre-filled information.\n\nThis dictionary stores automatically collected device and app information that\ncan be included in bug reports. Keys typically include \"App Version\", \"Device Model\",\nand \"OS Version\", but can be customized as needed.\n\n## Example\n```swift\n[\n    \"App Version\": \"1.2.3\",\n    \"Device Model\": \"iPhone 14 Pro\",\n    \"OS Version\": \"16.0\"\n]\n```",
            "key.doc.declaration" : "@MainActor public var preFilledData: [String : String]",
            "key.doc.discussion" : [
              {
                "Para" : "This dictionary stores automatically collected device and app information that can be included in bug reports. Keys typically include “App Version”, “Device Model”, and “OS Version”, but can be customized as needed."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"236\" column=\"16\"><Name>preFilledData<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC13preFilledDataSDyS2SGvp<\/USR><Declaration>@MainActor public var preFilledData: [String : String]<\/Declaration><CommentParts><Abstract><Para>A dictionary containing key-value pairs of pre-filled information.<\/Para><\/Abstract><Discussion><Para>This dictionary stores automatically collected device and app information that can be included in bug reports. Keys typically include “App Version”, “Device Model”, and “OS Version”, but can be customized as needed.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[[]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \"App Version\": \"1.2.3\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \"Device Model\": \"iPhone 14 Pro\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \"OS Version\": \"16.0\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 236,
            "key.doc.name" : "preFilledData",
            "key.doc.type" : "Other",
            "key.doclength" : 509,
            "key.docoffset" : 7664,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>preFilledData<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 35,
            "key.line" : 236,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "preFilledData",
            "key.namelength" : 13,
            "key.nameoffset" : 8188,
            "key.offset" : 8184,
            "key.parsed_declaration" : "public var preFilledData: [String: String]",
            "key.parsed_scope.end" : 236,
            "key.parsed_scope.start" : 236,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[String : String]",
            "key.typeusr" : "$sSDyS2SGD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC13preFilledDataSDyS2SGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var preFilledDataComponentBuilder: (<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:7SwiftUI7AnyViewV\">AnyView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 9206
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "A closure that creates the visual representation for each pre-filled data item.\n\nThis builder function is called for each key-value pair in ``preFilledData`` to\ncreate the SwiftUI view that displays the information. You can customize this\nto change how the pre-filled data appears in the interface.\n\n- Parameters:\n  - key: The key from the pre-filled data dictionary\n  - value: The corresponding value from the pre-filled data dictionary\n- Returns: An `AnyView` containing the visual representation\n\n## Default Implementation\n```swift\n{ key, value in\n    AnyView(\n        PreFilledDataComponent {\n            Text(key)\n        } value: {\n            Text(value)\n                .foregroundStyle(.secondary)\n                .multilineTextAlignment(.trailing)\n        }\n    )\n}\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "A closure that creates the visual representation for each pre-filled data item.\n\nThis builder function is called for each key-value pair in ``preFilledData`` to\ncreate the SwiftUI view that displays the information. You can customize this\nto change how the pre-filled data appears in the interface.\n\n- Parameters:\n  - key: The key from the pre-filled data dictionary\n  - value: The corresponding value from the pre-filled data dictionary\n- Returns: An `AnyView` containing the visual representation\n\n## Default Implementation\n```swift\n{ key, value in\n    AnyView(\n        PreFilledDataComponent {\n            Text(key)\n        } value: {\n            Text(value)\n                .foregroundStyle(.secondary)\n                .multilineTextAlignment(.trailing)\n        }\n    )\n}\n```",
            "key.doc.declaration" : "@MainActor public var preFilledDataComponentBuilder: (String, String) -> AnyView",
            "key.doc.discussion" : [
              {
                "Para" : "This builder function is called for each key-value pair in `preFilledData` to create the SwiftUI view that displays the information. You can customize this to change how the pre-filled data appears in the interface."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"263\" column=\"16\"><Name>preFilledDataComponentBuilder<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC29preFilledDataComponentBuildery05SwiftC003AnyE0VSS_SStcvp<\/USR><Declaration>@MainActor public var preFilledDataComponentBuilder: (String, String) -&gt; AnyView<\/Declaration><CommentParts><Abstract><Para>A closure that creates the visual representation for each pre-filled data item.<\/Para><\/Abstract><Parameters><Parameter><Name>key<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The key from the pre-filled data dictionary<\/Para><\/Discussion><\/Parameter><Parameter><Name>value<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The corresponding value from the pre-filled data dictionary<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>An <codeVoice>AnyView<\/codeVoice> containing the visual representation<\/Para><\/ResultDiscussion><Discussion><Para>This builder function is called for each key-value pair in <codeVoice>preFilledData<\/codeVoice> to create the SwiftUI view that displays the information. You can customize this to change how the pre-filled data appears in the interface.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Implementation<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[{ key, value in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    AnyView(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        PreFilledDataComponent {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            Text(key)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        } value: {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            Text(value)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                .foregroundStyle(.secondary)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                .multilineTextAlignment(.trailing)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    )]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 263,
            "key.doc.name" : "preFilledDataComponentBuilder",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The key from the pre-filled data dictionary"
                  }
                ],
                "name" : "key"
              },
              {
                "discussion" : [
                  {
                    "Para" : "The corresponding value from the pre-filled data dictionary"
                  }
                ],
                "name" : "value"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "An `AnyView` containing the visual representation"
              }
            ],
            "key.doc.type" : "Other",
            "key.doclength" : 973,
            "key.docoffset" : 8229,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>preFilledDataComponentBuilder<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7SwiftUI7AnyViewV\">AnyView<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 62,
            "key.line" : 263,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "preFilledDataComponentBuilder",
            "key.namelength" : 29,
            "key.nameoffset" : 9217,
            "key.offset" : 9213,
            "key.parsed_declaration" : "public var preFilledDataComponentBuilder: (String, String) -> AnyView",
            "key.parsed_scope.end" : 263,
            "key.parsed_scope.start" : 263,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "(String, String) -> AnyView",
            "key.typeusr" : "$sy7SwiftUI7AnyViewVSS_SStcD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC29preFilledDataComponentBuildery05SwiftC003AnyE0VSS_SStcvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 26,
            "key.name" : "MARK: - Custom Form Fields",
            "key.offset" : 9288
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var customFields: [<Type usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV\">CustomFormFieldWrapper<\/Type>]?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10085
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "An optional array of custom form field wrappers for additional user input.\n\nUse this property to add custom input fields to the bug report form. Each field\nshould be wrapped in a ``CustomFormFieldWrapper`` to provide consistent access\nto field keys and values.\n\nWhen `nil`, no custom fields section is displayed. When populated, the fields\nare rendered in their own section with the configured headers and footers.\n\n## Example\n```swift\nlet emailField = EmailFormField()\nlet phoneField = PhoneFormField()\ncustomFields = [\n    CustomFormFieldWrapper(field: emailField),\n    CustomFormFieldWrapper(field: phoneField)\n]\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "An optional array of custom form field wrappers for additional user input.\n\nUse this property to add custom input fields to the bug report form. Each field\nshould be wrapped in a ``CustomFormFieldWrapper`` to provide consistent access\nto field keys and values.\n\nWhen `nil`, no custom fields section is displayed. When populated, the fields\nare rendered in their own section with the configured headers and footers.\n\n## Example\n```swift\nlet emailField = EmailFormField()\nlet phoneField = PhoneFormField()\ncustomFields = [\n    CustomFormFieldWrapper(field: emailField),\n    CustomFormFieldWrapper(field: phoneField)\n]\n```",
            "key.doc.declaration" : "@MainActor public var customFields: [CustomFormFieldWrapper]?",
            "key.doc.discussion" : [
              {
                "Para" : "Use this property to add custom input fields to the bug report form. Each field should be wrapped in a `CustomFormFieldWrapper` to provide consistent access to field keys and values."
              },
              {
                "Para" : "When `nil`, no custom fields section is displayed. When populated, the fields are rendered in their own section with the configured headers and footers."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"285\" column=\"16\"><Name>customFields<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC12customFieldsSayAA22CustomFormFieldWrapperVGSgvp<\/USR><Declaration>@MainActor public var customFields: [CustomFormFieldWrapper]?<\/Declaration><CommentParts><Abstract><Para>An optional array of custom form field wrappers for additional user input.<\/Para><\/Abstract><Discussion><Para>Use this property to add custom input fields to the bug report form. Each field should be wrapped in a <codeVoice>CustomFormFieldWrapper<\/codeVoice> to provide consistent access to field keys and values.<\/Para><Para>When <codeVoice>nil<\/codeVoice>, no custom fields section is displayed. When populated, the fields are rendered in their own section with the configured headers and footers.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let emailField = EmailFormField()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let phoneField = PhoneFormField()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[customFields = []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    CustomFormFieldWrapper(field: emailField),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    CustomFormFieldWrapper(field: phoneField)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 285,
            "key.doc.name" : "customFields",
            "key.doc.type" : "Other",
            "key.doclength" : 757,
            "key.docoffset" : 9324,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>customFields<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV\">CustomFormFieldWrapper<\/ref.struct>]?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.line" : 285,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "customFields",
            "key.namelength" : 12,
            "key.nameoffset" : 10096,
            "key.offset" : 10092,
            "key.parsed_declaration" : "public var customFields: [CustomFormFieldWrapper]?",
            "key.parsed_scope.end" : 285,
            "key.parsed_scope.start" : 285,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[CustomFormFieldWrapper]?",
            "key.typeusr" : "$sSay14SimpleLoggerUI22CustomFormFieldWrapperVGSgD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC12customFieldsSayAA22CustomFormFieldWrapperVGSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var customFieldsSectionHeader: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10482
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The header text for the custom form fields section.\n\nThis text appears above any custom form fields when ``customFields`` is not empty.\nIt should clearly indicate what additional information is being requested.\n\n## Default Value\n```swift\n\"Additional Information\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The header text for the custom form fields section.\n\nThis text appears above any custom form fields when ``customFields`` is not empty.\nIt should clearly indicate what additional information is being requested.\n\n## Default Value\n```swift\n\"Additional Information\"\n```",
            "key.doc.declaration" : "@MainActor public var customFieldsSectionHeader: String",
            "key.doc.discussion" : [
              {
                "Para" : "This text appears above any custom form fields when `customFields` is not empty. It should clearly indicate what additional information is being requested."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"296\" column=\"16\"><Name>customFieldsSectionHeader<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC25customFieldsSectionHeaderSSvp<\/USR><Declaration>@MainActor public var customFieldsSectionHeader: String<\/Declaration><CommentParts><Abstract><Para>The header text for the custom form fields section.<\/Para><\/Abstract><Discussion><Para>This text appears above any custom form fields when <codeVoice>customFields<\/codeVoice> is not empty. It should clearly indicate what additional information is being requested.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Additional Information\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 296,
            "key.doc.name" : "customFieldsSectionHeader",
            "key.doc.type" : "Other",
            "key.doclength" : 333,
            "key.docoffset" : 10145,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>customFieldsSectionHeader<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 37,
            "key.line" : 296,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "customFieldsSectionHeader",
            "key.namelength" : 25,
            "key.nameoffset" : 10493,
            "key.offset" : 10489,
            "key.parsed_declaration" : "public var customFieldsSectionHeader: String",
            "key.parsed_scope.end" : 296,
            "key.parsed_scope.start" : 296,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC25customFieldsSectionHeaderSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var customFieldsSectionFooter: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 10854
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The footer text for the custom form fields section.\n\nThis explanatory text appears below the custom fields section header to provide\nguidance about filling in the additional fields.\n\n## Default Value\n```swift\n\"Please fill in the fields below.\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The footer text for the custom form fields section.\n\nThis explanatory text appears below the custom fields section header to provide\nguidance about filling in the additional fields.\n\n## Default Value\n```swift\n\"Please fill in the fields below.\"\n```",
            "key.doc.declaration" : "@MainActor public var customFieldsSectionFooter: String",
            "key.doc.discussion" : [
              {
                "Para" : "This explanatory text appears below the custom fields section header to provide guidance about filling in the additional fields."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"307\" column=\"16\"><Name>customFieldsSectionFooter<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC25customFieldsSectionFooterSSvp<\/USR><Declaration>@MainActor public var customFieldsSectionFooter: String<\/Declaration><CommentParts><Abstract><Para>The footer text for the custom form fields section.<\/Para><\/Abstract><Discussion><Para>This explanatory text appears below the custom fields section header to provide guidance about filling in the additional fields.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Please fill in the fields below.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 307,
            "key.doc.name" : "customFieldsSectionFooter",
            "key.doc.type" : "Other",
            "key.doclength" : 314,
            "key.docoffset" : 10536,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>customFieldsSectionFooter<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 37,
            "key.line" : 307,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "customFieldsSectionFooter",
            "key.namelength" : 25,
            "key.nameoffset" : 10865,
            "key.offset" : 10861,
            "key.parsed_declaration" : "public var customFieldsSectionFooter: String",
            "key.parsed_scope.end" : 307,
            "key.parsed_scope.start" : 307,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC25customFieldsSectionFooterSSvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 23,
            "key.name" : "MARK: - Log Information",
            "key.offset" : 10911
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var showLogFilesInformation: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11356
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Controls whether the log files information section is visible to users.\n\nWhen `true`, users can see information about log files that will be included\nin their bug report. When `false`, this section is hidden from view.\nThis section typically displays details like log file names, sizes, and dates.\n\n## Default Value\n```swift\ntrue\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "Controls whether the log files information section is visible to users.\n\nWhen `true`, users can see information about log files that will be included\nin their bug report. When `false`, this section is hidden from view.\nThis section typically displays details like log file names, sizes, and dates.\n\n## Default Value\n```swift\ntrue\n```",
            "key.doc.declaration" : "@MainActor public var showLogFilesInformation: Bool",
            "key.doc.discussion" : [
              {
                "Para" : "When `true`, users can see information about log files that will be included in their bug report. When `false`, this section is hidden from view. This section typically displays details like log file names, sizes, and dates."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"321\" column=\"16\"><Name>showLogFilesInformation<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC23showLogFilesInformationSbvp<\/USR><Declaration>@MainActor public var showLogFilesInformation: Bool<\/Declaration><CommentParts><Abstract><Para>Controls whether the log files information section is visible to users.<\/Para><\/Abstract><Discussion><Para>When <codeVoice>true<\/codeVoice>, users can see information about log files that will be included in their bug report. When <codeVoice>false<\/codeVoice>, this section is hidden from view. This section typically displays details like log file names, sizes, and dates.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[true]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 321,
            "key.doc.name" : "showLogFilesInformation",
            "key.doc.type" : "Other",
            "key.doclength" : 408,
            "key.docoffset" : 10944,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>showLogFilesInformation<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.line" : 321,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "showLogFilesInformation",
            "key.namelength" : 23,
            "key.nameoffset" : 11367,
            "key.offset" : 11363,
            "key.parsed_declaration" : "public var showLogFilesInformation: Bool",
            "key.parsed_scope.end" : 321,
            "key.parsed_scope.start" : 321,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC23showLogFilesInformationSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var logFilesInformationSectionHeader: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 11738
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The header text for the log files information section.\n\nThis text appears above the list of log files that will be included in the bug report.\nIt should clearly identify what type of log information is being displayed.\n\n## Default Value\n```swift\n\"Log Files\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The header text for the log files information section.\n\nThis text appears above the list of log files that will be included in the bug report.\nIt should clearly identify what type of log information is being displayed.\n\n## Default Value\n```swift\n\"Log Files\"\n```",
            "key.doc.declaration" : "@MainActor public var logFilesInformationSectionHeader: String",
            "key.doc.discussion" : [
              {
                "Para" : "This text appears above the list of log files that will be included in the bug report. It should clearly identify what type of log information is being displayed."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"332\" column=\"16\"><Name>logFilesInformationSectionHeader<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC32logFilesInformationSectionHeaderSSvp<\/USR><Declaration>@MainActor public var logFilesInformationSectionHeader: String<\/Declaration><CommentParts><Abstract><Para>The header text for the log files information section.<\/Para><\/Abstract><Discussion><Para>This text appears above the list of log files that will be included in the bug report. It should clearly identify what type of log information is being displayed.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Log Files\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 332,
            "key.doc.name" : "logFilesInformationSectionHeader",
            "key.doc.type" : "Other",
            "key.doclength" : 328,
            "key.docoffset" : 11406,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>logFilesInformationSectionHeader<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.line" : 332,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "logFilesInformationSectionHeader",
            "key.namelength" : 32,
            "key.nameoffset" : 11749,
            "key.offset" : 11745,
            "key.parsed_declaration" : "public var logFilesInformationSectionHeader: String",
            "key.parsed_scope.end" : 332,
            "key.parsed_scope.start" : 332,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC32logFilesInformationSectionHeaderSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var logFilesInformationSectionFooter: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 12202
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The footer text for the log files information section.\n\nThis explanatory text appears below the log files information to inform users\nthat these log files will be automatically included in their bug report for\ndebugging purposes.\n\n## Default Value\n```swift\n\"The log files above are automatically included in the report.\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The footer text for the log files information section.\n\nThis explanatory text appears below the log files information to inform users\nthat these log files will be automatically included in their bug report for\ndebugging purposes.\n\n## Default Value\n```swift\n\"The log files above are automatically included in the report.\"\n```",
            "key.doc.declaration" : "@MainActor public var logFilesInformationSectionFooter: String",
            "key.doc.discussion" : [
              {
                "Para" : "This explanatory text appears below the log files information to inform users that these log files will be automatically included in their bug report for debugging purposes."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"344\" column=\"16\"><Name>logFilesInformationSectionFooter<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC32logFilesInformationSectionFooterSSvp<\/USR><Declaration>@MainActor public var logFilesInformationSectionFooter: String<\/Declaration><CommentParts><Abstract><Para>The footer text for the log files information section.<\/Para><\/Abstract><Discussion><Para>This explanatory text appears below the log files information to inform users that these log files will be automatically included in their bug report for debugging purposes.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"The log files above are automatically included in the report.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 344,
            "key.doc.name" : "logFilesInformationSectionFooter",
            "key.doc.type" : "Other",
            "key.doclength" : 399,
            "key.docoffset" : 11799,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>logFilesInformationSectionFooter<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.line" : 344,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "logFilesInformationSectionFooter",
            "key.namelength" : 32,
            "key.nameoffset" : 12213,
            "key.offset" : 12209,
            "key.parsed_declaration" : "public var logFilesInformationSectionFooter: String",
            "key.parsed_scope.end" : 344,
            "key.parsed_scope.start" : 344,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC32logFilesInformationSectionFooterSSvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 19,
            "key.name" : "MARK: - Send Action",
            "key.offset" : 12267
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var sendAction: ((<Type usr=\"s:SS\">String<\/Type>, [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>], [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>], (<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:10Foundation4DataV\">Data<\/Type>?)) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13498
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "A custom action to be executed when the send report button is tapped.\n\nThis closure is called with all the collected report data when the user taps \nthe \"Send Report\" button. You must provide this closure to handle report submission,\nas there is no default send report implementation.\n\nThe closure receives the following data:\n- Issue description text entered by the user\n- Pre-filled data dictionary (if enabled)\n- Custom field values dictionary\n- Log file information (summary and data)\n\n## Important\nThis property is required for the reporter view to function properly. If no custom\naction is provided, the send button will execute without performing any report\nsubmission.\n\n## Example\n```swift\nconfig.sendAction = { issueText, preFilledData, customFields, logInfo in\n    \/\/ Custom report submission logic\n    submitBugReport(\n        description: issueText,\n        deviceInfo: preFilledData,\n        additionalFields: customFields,\n        logData: logInfo\n    )\n}\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "A custom action to be executed when the send report button is tapped.\n\nThis closure is called with all the collected report data when the user taps \nthe \"Send Report\" button. You must provide this closure to handle report submission,\nas there is no default send report implementation.\n\nThe closure receives the following data:\n- Issue description text entered by the user\n- Pre-filled data dictionary (if enabled)\n- Custom field values dictionary\n- Log file information (summary and data)\n\n## Important\nThis property is required for the reporter view to function properly. If no custom\naction is provided, the send button will execute without performing any report\nsubmission.\n\n## Example\n```swift\nconfig.sendAction = { issueText, preFilledData, customFields, logInfo in\n    \/\/ Custom report submission logic\n    submitBugReport(\n        description: issueText,\n        deviceInfo: preFilledData,\n        additionalFields: customFields,\n        logData: logInfo\n    )\n}\n```",
            "key.doc.declaration" : "@MainActor public var sendAction: ((String, [String : String], [String : String], (String, Data?)) -> Void)?",
            "key.doc.discussion" : [
              {
                "Para" : "This closure is called with all the collected report data when the user taps the “Send Report” button. You must provide this closure to handle report submission, as there is no default send report implementation."
              },
              {
                "Para" : "The closure receives the following data:"
              },
              {
                "List-Bullet" : ""
              },
              {
                "Para" : "This property is required for the reporter view to function properly. If no custom action is provided, the send button will execute without performing any report submission."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"378\" column=\"16\"><Name>sendAction<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC10sendActionySS_SDyS2SGAESS_10Foundation4DataVSgttcSgvp<\/USR><Declaration>@MainActor public var sendAction: ((String, [String : String], [String : String], (String, Data?)) -&gt; Void)?<\/Declaration><CommentParts><Abstract><Para>A custom action to be executed when the send report button is tapped.<\/Para><\/Abstract><Discussion><Para>This closure is called with all the collected report data when the user taps the “Send Report” button. You must provide this closure to handle report submission, as there is no default send report implementation.<\/Para><Para>The closure receives the following data:<\/Para><List-Bullet><Item><Para>Issue description text entered by the user<\/Para><\/Item><Item><Para>Pre-filled data dictionary (if enabled)<\/Para><\/Item><Item><Para>Custom field values dictionary<\/Para><\/Item><Item><Para>Log file information (summary and data)<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Important<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>This property is required for the reporter view to function properly. If no custom action is provided, the send button will execute without performing any report submission.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[config.sendAction = { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Custom report submission logic]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    submitBugReport(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        description: issueText,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        deviceInfo: preFilledData,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        additionalFields: customFields,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        logData: logInfo]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    )]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 378,
            "key.doc.name" : "sendAction",
            "key.doc.type" : "Other",
            "key.doclength" : 1198,
            "key.docoffset" : 12296,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sendAction<\/decl.name>: <decl.var.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 88,
            "key.line" : 378,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "sendAction",
            "key.namelength" : 10,
            "key.nameoffset" : 13509,
            "key.offset" : 13505,
            "key.parsed_declaration" : "public var sendAction: ((String, [String: String], [String: String], (String, Data?)) -> Void)?",
            "key.parsed_scope.end" : 378,
            "key.parsed_scope.start" : 378,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "((String, [String : String], [String : String], (String, Data?)) -> ())?",
            "key.typeusr" : "$sySS_SDyS2SGAASS_10Foundation4DataVSgttcSgD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC10sendActionySS_SDyS2SGAESS_10Foundation4DataVSgttcSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var sendButtonText: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 13879
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The text displayed on the send report button in the navigation bar.\n\nThis text appears on the trailing navigation bar button that users tap to\nsubmit their bug report.\n\n## Default Value\n```swift\n\"Send\"\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The text displayed on the send report button in the navigation bar.\n\nThis text appears on the trailing navigation bar button that users tap to\nsubmit their bug report.\n\n## Default Value\n```swift\n\"Send\"\n```",
            "key.doc.declaration" : "@MainActor public var sendButtonText: String",
            "key.doc.discussion" : [
              {
                "Para" : "This text appears on the trailing navigation bar button that users tap to submit their bug report."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"389\" column=\"16\"><Name>sendButtonText<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC14sendButtonTextSSvp<\/USR><Declaration>@MainActor public var sendButtonText: String<\/Declaration><CommentParts><Abstract><Para>The text displayed on the send report button in the navigation bar.<\/Para><\/Abstract><Discussion><Para>This text appears on the trailing navigation bar button that users tap to submit their bug report.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Default Value<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\"Send\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 389,
            "key.doc.name" : "sendButtonText",
            "key.doc.type" : "Other",
            "key.doclength" : 272,
            "key.docoffset" : 13603,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sendButtonText<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 389,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "sendButtonText",
            "key.namelength" : 14,
            "key.nameoffset" : 13890,
            "key.offset" : 13886,
            "key.parsed_declaration" : "public var sendButtonText: String",
            "key.parsed_scope.end" : 389,
            "key.parsed_scope.start" : 389,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC14sendButtonTextSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var snapshotObjects: [any <Type usr=\"s:s7Codablea\">Codable<\/Type>]?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 15327
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "An optional array of objects to automatically snapshot when a bug report is sent.\n\nWhen provided, these objects will be automatically captured using the SimpleLogger's\n`snapshot()` function before the bug report is submitted. This allows developers to\ninclude current application state and configuration data with every bug report.\n\nAll objects in the array must conform to `Codable` to be serialized and logged.\nThe snapshots are taken immediately before calling the send action, ensuring the\nmost current state is captured.\n\n## Use Cases\n- **Application State**: Include current app configuration and user session data\n- **Settings Manager**: Capture user preferences and configuration settings\n- **Network State**: Include current API configuration and authentication state\n- **Custom Managers**: Snapshot any custom application managers or controllers\n\n## Example\n```swift\nconfig.snapshotObjects = [\n    AppStateManager.shared,\n    UserSettingsManager.shared,\n    NetworkConfigurationManager.shared,\n    LocationManager.shared\n]\n```\n\n- Note: Snapshots are logged with debug level and synthetic source information\n- Important: All objects must conform to `Codable` for serialization",
            "key.doc.column" : 16,
            "key.doc.comment" : "An optional array of objects to automatically snapshot when a bug report is sent.\n\nWhen provided, these objects will be automatically captured using the SimpleLogger's\n`snapshot()` function before the bug report is submitted. This allows developers to\ninclude current application state and configuration data with every bug report.\n\nAll objects in the array must conform to `Codable` to be serialized and logged.\nThe snapshots are taken immediately before calling the send action, ensuring the\nmost current state is captured.\n\n## Use Cases\n- **Application State**: Include current app configuration and user session data\n- **Settings Manager**: Capture user preferences and configuration settings\n- **Network State**: Include current API configuration and authentication state\n- **Custom Managers**: Snapshot any custom application managers or controllers\n\n## Example\n```swift\nconfig.snapshotObjects = [\n    AppStateManager.shared,\n    UserSettingsManager.shared,\n    NetworkConfigurationManager.shared,\n    LocationManager.shared\n]\n```\n\n- Note: Snapshots are logged with debug level and synthetic source information\n- Important: All objects must conform to `Codable` for serialization",
            "key.doc.declaration" : "@MainActor public var snapshotObjects: [any Codable]?",
            "key.doc.discussion" : [
              {
                "Para" : "When provided, these objects will be automatically captured using the SimpleLogger’s `snapshot()` function before the bug report is submitted. This allows developers to include current application state and configuration data with every bug report."
              },
              {
                "Para" : "All objects in the array must conform to `Codable` to be serialized and logged. The snapshots are taken immediately before calling the send action, ensuring the most current state is captured."
              },
              {
                "List-Bullet" : ""
              },
              {
                "CodeListing" : ""
              },
              {
                "Note" : ""
              },
              {
                "Important" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"419\" column=\"16\"><Name>snapshotObjects<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC15snapshotObjectsSaySe_SEpGSgvp<\/USR><Declaration>@MainActor public var snapshotObjects: [any Codable]?<\/Declaration><CommentParts><Abstract><Para>An optional array of objects to automatically snapshot when a bug report is sent.<\/Para><\/Abstract><Discussion><Para>When provided, these objects will be automatically captured using the SimpleLogger’s <codeVoice>snapshot()<\/codeVoice> function before the bug report is submitted. This allows developers to include current application state and configuration data with every bug report.<\/Para><Para>All objects in the array must conform to <codeVoice>Codable<\/codeVoice> to be serialized and logged. The snapshots are taken immediately before calling the send action, ensuring the most current state is captured.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Use Cases<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><List-Bullet><Item><Para><bold>Application State<\/bold>: Include current app configuration and user session data<\/Para><\/Item><Item><Para><bold>Settings Manager<\/bold>: Capture user preferences and configuration settings<\/Para><\/Item><Item><Para><bold>Network State<\/bold>: Include current API configuration and authentication state<\/Para><\/Item><Item><Para><bold>Custom Managers<\/bold>: Snapshot any custom application managers or controllers<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[config.snapshotObjects = []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    AppStateManager.shared,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    UserSettingsManager.shared,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    NetworkConfigurationManager.shared,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    LocationManager.shared]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Note><Para>Snapshots are logged with debug level and synthetic source information<\/Para><\/Note><Important><Para>All objects must conform to <codeVoice>Codable<\/codeVoice> for serialization<\/Para><\/Important><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 419,
            "key.doc.name" : "snapshotObjects",
            "key.doc.type" : "Other",
            "key.doclength" : 1401,
            "key.docoffset" : 13922,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>snapshotObjects<\/decl.name>: <decl.var.type>[<syntaxtype.keyword>any<\/syntaxtype.keyword> <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias>]?<\/decl.var.type><\/decl.var.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 35,
            "key.line" : 419,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "snapshotObjects",
            "key.namelength" : 15,
            "key.nameoffset" : 15338,
            "key.offset" : 15334,
            "key.parsed_declaration" : "public var snapshotObjects: [any Codable]?",
            "key.parsed_scope.end" : 419,
            "key.parsed_scope.start" : 419,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "[any Decodable & Encodable]?",
            "key.typeusr" : "$sSaySe_SEpGSgD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC15snapshotObjectsSaySe_SEpGSgvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 12,
            "key.name" : "MARK: - Form",
            "key.offset" : 15378
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public init(navigationBarTitle: <Type usr=\"s:SS\">String<\/Type> = &quot;Report a Issue&quot;, bgSectionHeader: <Type usr=\"s:SS\">String<\/Type> = &quot;Describe the issue&quot;, bgSectionFooter: <Type usr=\"s:SS\">String<\/Type> = &quot;Please provide a detailed description of the issue you are experiencing.&quot;, bgPlaceholderText: <Type usr=\"s:SS\">String<\/Type> = &quot;Bug description (optional)&quot;, showPrefilledDataSection: <Type usr=\"s:Sb\">Bool<\/Type> = true, sendPreFilledData: <Type usr=\"s:Sb\">Bool<\/Type> = true, preFilledDataSectionHeader: <Type usr=\"s:SS\">String<\/Type> = &quot;Information&quot;, preFilledDataSectionFooter: <Type usr=\"s:SS\">String<\/Type> = &quot;The information above is automatically included in the report.&quot;, preFilledData: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>] = [:], preFilledDataComponentBuilder: @escaping (<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:SS\">String<\/Type>) -&gt; <Type usr=\"s:7SwiftUI7AnyViewV\">AnyView<\/Type> = { key, value in\n            AnyView(\n                PreFilledDataComponent {\n                    Text(key)\n                } value: {\n                    Text(value)\n                        .foregroundStyle(.secondary)\n                        .multilineTextAlignment(.trailing)\n                }\n            )\n        }, customFields: [<Type usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV\">CustomFormFieldWrapper<\/Type>]? = nil, customFieldsSectionHeader: <Type usr=\"s:SS\">String<\/Type> = &quot;Additional Information&quot;, customFieldsSectionFooter: <Type usr=\"s:SS\">String<\/Type> = &quot;Please fill in the fields below.&quot;, showLogFilesInformation: <Type usr=\"s:Sb\">Bool<\/Type> = true, logFilesInformationSectionHeader: <Type usr=\"s:SS\">String<\/Type> = &quot;Log Files&quot;, logFilesInformationSectionFooter: <Type usr=\"s:SS\">String<\/Type> = &quot;The log files above are automatically included in the report.&quot;, sendAction: ((<Type usr=\"s:SS\">String<\/Type>, [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>], [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>], (<Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:10Foundation4DataV\">Data<\/Type>?)) -&gt; <Type usr=\"s:s4Voida\">Void<\/Type>)? = nil, sendButtonText: <Type usr=\"s:SS\">String<\/Type> = &quot;Send&quot;, snapshotObjects: [any <Type usr=\"s:s7Codablea\">Codable<\/Type>]? = nil, includeAppVersion: <Type usr=\"s:Sb\">Bool<\/Type> = true, includeDeviceOS: <Type usr=\"s:Sb\">Bool<\/Type> = true, includeDeviceModel: <Type usr=\"s:Sb\">Bool<\/Type> = true)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 19125
              }
            ],
            "key.bodylength" : 1657,
            "key.bodyoffset" : 20875,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Creates a new reporter view configuration with the specified options.\n\nThis initializer provides comprehensive customization of the bug reporting interface,\nincluding text content, behavior settings, custom fields, automatic data collection,\nand log files information display. All parameters have sensible defaults, so you only\nneed to specify the options you want to customize.\n\n- Parameters:\n  - navigationBarTitle: The title for the navigation bar. Defaults to \"Report a Issue\".\n  - bgSectionHeader: Header text for the bug description section. Defaults to \"Describe the issue\".\n  - bgSectionFooter: Footer text for the bug description section. Defaults to helpful instruction text.\n  - bgPlaceholderText: Placeholder text for the description field. Defaults to \"Bug description (optional)\".\n  - showPrefilledDataSection: Whether to show the pre-filled data section. Defaults to `true`.\n  - sendPreFilledData: Whether to include pre-filled data in submissions. Defaults to `true`.\n  - preFilledDataSectionHeader: Header for the pre-filled data section. Defaults to \"Information\".\n  - preFilledDataSectionFooter: Footer for the pre-filled data section. Defaults to explanatory text.\n  - preFilledData: Initial pre-filled data dictionary. Defaults to empty, but may be populated based on other parameters.\n  - preFilledDataComponentBuilder: Builder closure for pre-filled data views. Defaults to using ``PreFilledDataComponent``.\n  - customFields: Optional array of custom form fields. Defaults to `nil`.\n  - customFieldsSectionHeader: Header for custom fields section. Defaults to \"Additional Information\".\n  - customFieldsSectionFooter: Footer for custom fields section. Defaults to \"Please fill in the fields below.\".\n  - showLogFilesInformation: Whether to show the log files information section. Defaults to `true`.\n  - logFilesInformationSectionHeader: Header for log files section. Defaults to \"Log Files\".\n  - logFilesInformationSectionFooter: Footer for log files section. Defaults to explanatory text.\n  - includeAppVersion: Whether to automatically include app version. Defaults to `true`.\n  - includeDeviceOS: Whether to automatically include OS version. Defaults to `true`.\n  - includeDeviceModel: Whether to automatically include device model. Defaults to `true`.\n  - sendAction: Custom action to perform on report submission. Defaults to `nil`.\n  - sendButtonText: Text for the send report button. Defaults to \"Send\".\n  - snapshotObjects: Array of objects to snapshot on send. Defaults to `nil`.\n\n## Automatic Data Collection\n\nWhen the corresponding include parameters are `true`, the following information is automatically collected:\n- **App Version**: Retrieved from the main bundle's `CFBundleShortVersionString`\n- **Device Model**: Retrieved using DeviceKit (if available)\n- **OS Version**: Retrieved from `UIDevice.current.systemVersion` (if UIKit is available)\n\n## Example\n\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Report Problem\",\n    bgSectionHeader: \"What went wrong?\",\n    showPrefilledDataSection: true,\n    showLogFilesInformation: true,\n    includeAppVersion: true,\n    includeDeviceModel: false,\n    customFields: [\n        CustomFormFieldWrapper(field: EmailField()),\n        CustomFormFieldWrapper(field: CategoryField())\n    ]\n)\n```",
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new reporter view configuration with the specified options.\n\nThis initializer provides comprehensive customization of the bug reporting interface,\nincluding text content, behavior settings, custom fields, automatic data collection,\nand log files information display. All parameters have sensible defaults, so you only\nneed to specify the options you want to customize.\n\n- Parameters:\n  - navigationBarTitle: The title for the navigation bar. Defaults to \"Report a Issue\".\n  - bgSectionHeader: Header text for the bug description section. Defaults to \"Describe the issue\".\n  - bgSectionFooter: Footer text for the bug description section. Defaults to helpful instruction text.\n  - bgPlaceholderText: Placeholder text for the description field. Defaults to \"Bug description (optional)\".\n  - showPrefilledDataSection: Whether to show the pre-filled data section. Defaults to `true`.\n  - sendPreFilledData: Whether to include pre-filled data in submissions. Defaults to `true`.\n  - preFilledDataSectionHeader: Header for the pre-filled data section. Defaults to \"Information\".\n  - preFilledDataSectionFooter: Footer for the pre-filled data section. Defaults to explanatory text.\n  - preFilledData: Initial pre-filled data dictionary. Defaults to empty, but may be populated based on other parameters.\n  - preFilledDataComponentBuilder: Builder closure for pre-filled data views. Defaults to using ``PreFilledDataComponent``.\n  - customFields: Optional array of custom form fields. Defaults to `nil`.\n  - customFieldsSectionHeader: Header for custom fields section. Defaults to \"Additional Information\".\n  - customFieldsSectionFooter: Footer for custom fields section. Defaults to \"Please fill in the fields below.\".\n  - showLogFilesInformation: Whether to show the log files information section. Defaults to `true`.\n  - logFilesInformationSectionHeader: Header for log files section. Defaults to \"Log Files\".\n  - logFilesInformationSectionFooter: Footer for log files section. Defaults to explanatory text.\n  - includeAppVersion: Whether to automatically include app version. Defaults to `true`.\n  - includeDeviceOS: Whether to automatically include OS version. Defaults to `true`.\n  - includeDeviceModel: Whether to automatically include device model. Defaults to `true`.\n  - sendAction: Custom action to perform on report submission. Defaults to `nil`.\n  - sendButtonText: Text for the send report button. Defaults to \"Send\".\n  - snapshotObjects: Array of objects to snapshot on send. Defaults to `nil`.\n\n## Automatic Data Collection\n\nWhen the corresponding include parameters are `true`, the following information is automatically collected:\n- **App Version**: Retrieved from the main bundle's `CFBundleShortVersionString`\n- **Device Model**: Retrieved using DeviceKit (if available)\n- **OS Version**: Retrieved from `UIDevice.current.systemVersion` (if UIKit is available)\n\n## Example\n\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Report Problem\",\n    bgSectionHeader: \"What went wrong?\",\n    showPrefilledDataSection: true,\n    showLogFilesInformation: true,\n    includeAppVersion: true,\n    includeDeviceModel: false,\n    customFields: [\n        CustomFormFieldWrapper(field: EmailField()),\n        CustomFormFieldWrapper(field: CategoryField())\n    ]\n)\n```",
            "key.doc.declaration" : "@MainActor public init(navigationBarTitle: String = \"Report a Issue\", bgSectionHeader: String = \"Describe the issue\", bgSectionFooter: String = \"Please provide a detailed description of the issue you are experiencing.\", bgPlaceholderText: String = \"Bug description (optional)\", showPrefilledDataSection: Bool = true, sendPreFilledData: Bool = true, preFilledDataSectionHeader: String = \"Information\", preFilledDataSectionFooter: String = \"The information above is automatically included in the report.\", preFilledData: [String : String] = [:], preFilledDataComponentBuilder: @escaping (String, String) -> AnyView = { key, value in\n            AnyView(\n                PreFilledDataComponent {\n                    Text(key)\n                } value: {\n                    Text(value)\n                        .foregroundStyle(.secondary)\n                        .multilineTextAlignment(.trailing)\n                }\n            )\n        }, customFields: [CustomFormFieldWrapper]? = nil, customFieldsSectionHeader: String = \"Additional Information\", customFieldsSectionFooter: String = \"Please fill in the fields below.\", showLogFilesInformation: Bool = true, logFilesInformationSectionHeader: String = \"Log Files\", logFilesInformationSectionFooter: String = \"The log files above are automatically included in the report.\", sendAction: ((String, [String : String], [String : String], (String, Data?)) -> Void)? = nil, sendButtonText: String = \"Send\", snapshotObjects: [any Codable]? = nil, includeAppVersion: Bool = true, includeDeviceOS: Bool = true, includeDeviceModel: Bool = true)",
            "key.doc.discussion" : [
              {
                "Para" : "This initializer provides comprehensive customization of the bug reporting interface, including text content, behavior settings, custom fields, automatic data collection, and log files information display. All parameters have sensible defaults, so you only need to specify the options you want to customize."
              },
              {
                "Para" : "When the corresponding include parameters are `true`, the following information is automatically collected:"
              },
              {
                "List-Bullet" : ""
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"477\" column=\"12\"><Name>init(navigationBarTitle:bgSectionHeader:bgSectionFooter:bgPlaceholderText:showPrefilledDataSection:sendPreFilledData:preFilledDataSectionHeader:preFilledDataSectionFooter:preFilledData:preFilledDataComponentBuilder:customFields:customFieldsSectionHeader:customFieldsSectionFooter:showLogFilesInformation:logFilesInformationSectionHeader:logFilesInformationSectionFooter:sendAction:sendButtonText:snapshotObjects:includeAppVersion:includeDeviceOS:includeDeviceModel:)<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC18navigationBarTitle15bgSectionHeader0jK6Footer0J15PlaceholderText017showPrefilledDataK0013sendPreFilledR003preurkL00vurkM00vuR00vuR16ComponentBuilder12customFields0yzkL00yzkM00P19LogFilesInformation019logFilesInformationkL0019logFilesInformationkM00S6Action0s6ButtonO015snapshotObjects17includeAppVersion15includeDeviceOS18includeDeviceModelACSS_S3SS2bS2SSDyS2SG05SwiftC003AnyE0VSS_SStcSayAA22CustomFormFieldWrapperVGSgS2SSbS2SySS_A2ZSS_10Foundation0R0VSgttcSgSSSaySe_SEpGSgS3btcfc<\/USR><Declaration>@MainActor public init(navigationBarTitle: String = &quot;Report a Issue&quot;, bgSectionHeader: String = &quot;Describe the issue&quot;, bgSectionFooter: String = &quot;Please provide a detailed description of the issue you are experiencing.&quot;, bgPlaceholderText: String = &quot;Bug description (optional)&quot;, showPrefilledDataSection: Bool = true, sendPreFilledData: Bool = true, preFilledDataSectionHeader: String = &quot;Information&quot;, preFilledDataSectionFooter: String = &quot;The information above is automatically included in the report.&quot;, preFilledData: [String : String] = [:], preFilledDataComponentBuilder: @escaping (String, String) -&gt; AnyView = { key, value in\n            AnyView(\n                PreFilledDataComponent {\n                    Text(key)\n                } value: {\n                    Text(value)\n                        .foregroundStyle(.secondary)\n                        .multilineTextAlignment(.trailing)\n                }\n            )\n        }, customFields: [CustomFormFieldWrapper]? = nil, customFieldsSectionHeader: String = &quot;Additional Information&quot;, customFieldsSectionFooter: String = &quot;Please fill in the fields below.&quot;, showLogFilesInformation: Bool = true, logFilesInformationSectionHeader: String = &quot;Log Files&quot;, logFilesInformationSectionFooter: String = &quot;The log files above are automatically included in the report.&quot;, sendAction: ((String, [String : String], [String : String], (String, Data?)) -&gt; Void)? = nil, sendButtonText: String = &quot;Send&quot;, snapshotObjects: [any Codable]? = nil, includeAppVersion: Bool = true, includeDeviceOS: Bool = true, includeDeviceModel: Bool = true)<\/Declaration><CommentParts><Abstract><Para>Creates a new reporter view configuration with the specified options.<\/Para><\/Abstract><Parameters><Parameter><Name>navigationBarTitle<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The title for the navigation bar. Defaults to “Report a Issue”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>bgSectionHeader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Header text for the bug description section. Defaults to “Describe the issue”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>bgSectionFooter<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Footer text for the bug description section. Defaults to helpful instruction text.<\/Para><\/Discussion><\/Parameter><Parameter><Name>bgPlaceholderText<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Placeholder text for the description field. Defaults to “Bug description (optional)”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>showPrefilledDataSection<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether to show the pre-filled data section. Defaults to <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>sendPreFilledData<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether to include pre-filled data in submissions. Defaults to <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>preFilledDataSectionHeader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Header for the pre-filled data section. Defaults to “Information”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>preFilledDataSectionFooter<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Footer for the pre-filled data section. Defaults to explanatory text.<\/Para><\/Discussion><\/Parameter><Parameter><Name>preFilledData<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Initial pre-filled data dictionary. Defaults to empty, but may be populated based on other parameters.<\/Para><\/Discussion><\/Parameter><Parameter><Name>preFilledDataComponentBuilder<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Builder closure for pre-filled data views. Defaults to using <codeVoice>PreFilledDataComponent<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>customFields<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Optional array of custom form fields. Defaults to <codeVoice>nil<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>customFieldsSectionHeader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Header for custom fields section. Defaults to “Additional Information”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>customFieldsSectionFooter<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Footer for custom fields section. Defaults to “Please fill in the fields below.”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>showLogFilesInformation<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether to show the log files information section. Defaults to <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logFilesInformationSectionHeader<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Header for log files section. Defaults to “Log Files”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>logFilesInformationSectionFooter<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Footer for log files section. Defaults to explanatory text.<\/Para><\/Discussion><\/Parameter><Parameter><Name>includeAppVersion<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether to automatically include app version. Defaults to <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>includeDeviceOS<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether to automatically include OS version. Defaults to <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>includeDeviceModel<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Whether to automatically include device model. Defaults to <codeVoice>true<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>sendAction<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Custom action to perform on report submission. Defaults to <codeVoice>nil<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><Parameter><Name>sendButtonText<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Text for the send report button. Defaults to “Send”.<\/Para><\/Discussion><\/Parameter><Parameter><Name>snapshotObjects<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Array of objects to snapshot on send. Defaults to <codeVoice>nil<\/codeVoice>.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This initializer provides comprehensive customization of the bug reporting interface, including text content, behavior settings, custom fields, automatic data collection, and log files information display. All parameters have sensible defaults, so you only need to specify the options you want to customize.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Automatic Data Collection<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>When the corresponding include parameters are <codeVoice>true<\/codeVoice>, the following information is automatically collected:<\/Para><List-Bullet><Item><Para><bold>App Version<\/bold>: Retrieved from the main bundle’s <codeVoice>CFBundleShortVersionString<\/codeVoice><\/Para><\/Item><Item><Para><bold>Device Model<\/bold>: Retrieved using DeviceKit (if available)<\/Para><\/Item><Item><Para><bold>OS Version<\/bold>: Retrieved from <codeVoice>UIDevice.current.systemVersion<\/codeVoice> (if UIKit is available)<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    navigationBarTitle: \"Report Problem\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    bgSectionHeader: \"What went wrong?\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showPrefilledDataSection: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showLogFilesInformation: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    includeAppVersion: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    includeDeviceModel: false,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    customFields: []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        CustomFormFieldWrapper(field: EmailField()),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        CustomFormFieldWrapper(field: CategoryField())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 477,
            "key.doc.name" : "init(navigationBarTitle:bgSectionHeader:bgSectionFooter:bgPlaceholderText:showPrefilledDataSection:sendPreFilledData:preFilledDataSectionHeader:preFilledDataSectionFooter:preFilledData:preFilledDataComponentBuilder:customFields:customFieldsSectionHeader:customFieldsSectionFooter:showLogFilesInformation:logFilesInformationSectionHeader:logFilesInformationSectionFooter:sendAction:sendButtonText:snapshotObjects:includeAppVersion:includeDeviceOS:includeDeviceModel:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The title for the navigation bar. Defaults to “Report a Issue”."
                  }
                ],
                "name" : "navigationBarTitle"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Header text for the bug description section. Defaults to “Describe the issue”."
                  }
                ],
                "name" : "bgSectionHeader"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Footer text for the bug description section. Defaults to helpful instruction text."
                  }
                ],
                "name" : "bgSectionFooter"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Placeholder text for the description field. Defaults to “Bug description (optional)”."
                  }
                ],
                "name" : "bgPlaceholderText"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Whether to show the pre-filled data section. Defaults to `true`."
                  }
                ],
                "name" : "showPrefilledDataSection"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Whether to include pre-filled data in submissions. Defaults to `true`."
                  }
                ],
                "name" : "sendPreFilledData"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Header for the pre-filled data section. Defaults to “Information”."
                  }
                ],
                "name" : "preFilledDataSectionHeader"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Footer for the pre-filled data section. Defaults to explanatory text."
                  }
                ],
                "name" : "preFilledDataSectionFooter"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Initial pre-filled data dictionary. Defaults to empty, but may be populated based on other parameters."
                  }
                ],
                "name" : "preFilledData"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Builder closure for pre-filled data views. Defaults to using `PreFilledDataComponent`."
                  }
                ],
                "name" : "preFilledDataComponentBuilder"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Optional array of custom form fields. Defaults to `nil`."
                  }
                ],
                "name" : "customFields"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Header for custom fields section. Defaults to “Additional Information”."
                  }
                ],
                "name" : "customFieldsSectionHeader"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Footer for custom fields section. Defaults to “Please fill in the fields below.”."
                  }
                ],
                "name" : "customFieldsSectionFooter"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Whether to show the log files information section. Defaults to `true`."
                  }
                ],
                "name" : "showLogFilesInformation"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Header for log files section. Defaults to “Log Files”."
                  }
                ],
                "name" : "logFilesInformationSectionHeader"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Footer for log files section. Defaults to explanatory text."
                  }
                ],
                "name" : "logFilesInformationSectionFooter"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Whether to automatically include app version. Defaults to `true`."
                  }
                ],
                "name" : "includeAppVersion"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Whether to automatically include OS version. Defaults to `true`."
                  }
                ],
                "name" : "includeDeviceOS"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Whether to automatically include device model. Defaults to `true`."
                  }
                ],
                "name" : "includeDeviceModel"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Custom action to perform on report submission. Defaults to `nil`."
                  }
                ],
                "name" : "sendAction"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Text for the send report button. Defaults to “Send”."
                  }
                ],
                "name" : "sendButtonText"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Array of objects to snapshot on send. Defaults to `nil`."
                  }
                ],
                "name" : "snapshotObjects"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 3721,
            "key.docoffset" : 15400,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>navigationBarTitle<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Report a Issue&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bgSectionHeader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Describe the issue&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bgSectionFooter<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Please provide a detailed description of the issue you are experiencing.&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bgPlaceholderText<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Bug description (optional)&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>showPrefilledDataSection<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sendPreFilledData<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>preFilledDataSectionHeader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Information&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>preFilledDataSectionFooter<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;The information above is automatically included in the report.&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>preFilledData<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>preFilledDataComponentBuilder<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:7SwiftUI7AnyViewV\">AnyView<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type> = { key, value in\n            AnyView(\n                PreFilledDataComponent {\n                    Text(key)\n                } value: {\n                    Text(value)\n                        .foregroundStyle(.secondary)\n                        .multilineTextAlignment(.trailing)\n                }\n            )\n        }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>customFields<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:14SimpleLoggerUI22CustomFormFieldWrapperV\">CustomFormFieldWrapper<\/ref.struct>]?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>customFieldsSectionHeader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Additional Information&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>customFieldsSectionFooter<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Please fill in the fields below.&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>showLogFilesInformation<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logFilesInformationSectionHeader<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Log Files&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logFilesInformationSectionFooter<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;The log files above are automatically included in the report.&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sendAction<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/tuple.element.type><\/tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/tuple.element.type><\/tuple.element>)<\/tuple><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void<\/ref.typealias><\/decl.function.returntype><\/tuple.element.type><\/tuple.element>)<\/tuple>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sendButtonText<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = &quot;Send&quot;<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>snapshotObjects<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>[<syntaxtype.keyword>any<\/syntaxtype.keyword> <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias>]?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>includeAppVersion<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>includeDeviceOS<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>includeDeviceModel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 3401,
            "key.line" : 477,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "init(navigationBarTitle:bgSectionHeader:bgSectionFooter:bgPlaceholderText:showPrefilledDataSection:sendPreFilledData:preFilledDataSectionHeader:preFilledDataSectionFooter:preFilledData:preFilledDataComponentBuilder:customFields:customFieldsSectionHeader:customFieldsSectionFooter:showLogFilesInformation:logFilesInformationSectionHeader:logFilesInformationSectionFooter:sendAction:sendButtonText:snapshotObjects:includeAppVersion:includeDeviceOS:includeDeviceModel:)",
            "key.namelength" : 1741,
            "key.nameoffset" : 19132,
            "key.offset" : 19132,
            "key.parsed_declaration" : "public init(\n    navigationBarTitle: String = \"Report a Issue\",\n    bgSectionHeader: String = \"Describe the issue\",\n    bgSectionFooter: String = \"Please provide a detailed description of the issue you are experiencing.\",\n    bgPlaceholderText: String = \"Bug description (optional)\",\n    showPrefilledDataSection: Bool = true,\n    sendPreFilledData: Bool = true,\n    preFilledDataSectionHeader: String = \"Information\",\n    preFilledDataSectionFooter: String = \"The information above is automatically included in the report.\",\n    preFilledData: [String: String] = [:],\n    preFilledDataComponentBuilder: @escaping (String, String) -> AnyView = { key, value in\n        AnyView(\n            PreFilledDataComponent {\n                Text(key)\n            } value: {\n                Text(value)\n                    .foregroundStyle(.secondary)\n                    .multilineTextAlignment(.trailing)\n            }\n        )\n    },\n    customFields: [CustomFormFieldWrapper]? = nil,\n    customFieldsSectionHeader: String = \"Additional Information\",\n    customFieldsSectionFooter: String = \"Please fill in the fields below.\",\n    showLogFilesInformation: Bool = true,\n    logFilesInformationSectionHeader: String = \"Log Files\",\n    logFilesInformationSectionFooter: String = \"The log files above are automatically included in the report.\",\n    sendAction: ((String, [String: String], [String: String], (String, Data?)) -> Void)? = nil,\n    sendButtonText: String = \"Send\",\n    snapshotObjects: [any Codable]? = nil,\n    includeAppVersion: Bool = true,\n    includeDeviceOS: Bool = true,\n    includeDeviceModel: Bool = true\n)",
            "key.parsed_scope.end" : 547,
            "key.parsed_scope.start" : 477,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(ReporterViewConfiguration.Type) -> (String, String, String, String, Bool, Bool, String, String, [String : String], @escaping (String, String) -> AnyView, [CustomFormFieldWrapper]?, String, String, Bool, String, String, ((String, [String : String], [String : String], (String, Data?)) -> ())?, String, [any Decodable & Encodable]?, Bool, Bool, Bool) -> ReporterViewConfiguration",
            "key.typeusr" : "$s18navigationBarTitle15bgSectionHeader0dE6Footer0D15PlaceholderText017showPrefilledDataE0013sendPreFilledL003preoleF00poleG00poL00poL16ComponentBuilder12customFields0steF00steG00J19LogFilesInformation03logvweF00xvweG00M6Action0m6ButtonI015snapshotObjects17includeAppVersion15includeDeviceOS18includeDeviceModel14SimpleLoggerUI25ReporterViewConfigurationCSS_S3SS2bS2SSDyS2SG7SwiftUI7AnyViewVSS_SStcSayAW22CustomFormFieldWrapperVGSgS2SSbS2SySS_A2ZSS_10Foundation0L0VSgttcSgSSSaySe_SEpGSgS3btcD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC18navigationBarTitle15bgSectionHeader0jK6Footer0J15PlaceholderText017showPrefilledDataK0013sendPreFilledR003preurkL00vurkM00vuR00vuR16ComponentBuilder12customFields0yzkL00yzkM00P19LogFilesInformation019logFilesInformationkL0019logFilesInformationkM00S6Action0s6ButtonO015snapshotObjects17includeAppVersion15includeDeviceOS18includeDeviceModelACSS_S3SS2bS2SSDyS2SG05SwiftC003AnyE0VSS_SStcSayAA22CustomFormFieldWrapperVGSgS2SSbS2SySS_A2ZSS_10Foundation0R0VSgttcSgSSSaySe_SEpGSgS3btcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public func getCustomFieldValues() -&gt; [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 23367
              }
            ],
            "key.bodylength" : 240,
            "key.bodyoffset" : 23423,
            "key.column" : 17,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Retrieves the current values from all custom form fields as a dictionary.\n\nThis method collects the current state of all custom form fields and returns them\nas a dictionary where keys are the field identifiers and values are the current\nfield values as strings.\n\n- Returns: A dictionary mapping field keys to their current string values. Returns an empty dictionary if no custom fields are configured.\n\n## Usage\n\n```swift\nlet values = config.getCustomFieldValues()\nprint(values) \/\/ [\"email\": \"user@example.com\", \"category\": \"Bug\"]\n```\n\n## Note\n\nThis method only returns values from custom fields. Pre-filled data can be accessed\ndirectly through the ``preFilledData`` property.",
            "key.doc.column" : 17,
            "key.doc.comment" : "Retrieves the current values from all custom form fields as a dictionary.\n\nThis method collects the current state of all custom form fields and returns them\nas a dictionary where keys are the field identifiers and values are the current\nfield values as strings.\n\n- Returns: A dictionary mapping field keys to their current string values. Returns an empty dictionary if no custom fields are configured.\n\n## Usage\n\n```swift\nlet values = config.getCustomFieldValues()\nprint(values) \/\/ [\"email\": \"user@example.com\", \"category\": \"Bug\"]\n```\n\n## Note\n\nThis method only returns values from custom fields. Pre-filled data can be accessed\ndirectly through the ``preFilledData`` property.",
            "key.doc.declaration" : "@MainActor public func getCustomFieldValues() -> [String : String]",
            "key.doc.discussion" : [
              {
                "Para" : "This method collects the current state of all custom form fields and returns them as a dictionary where keys are the field identifiers and values are the current field values as strings."
              },
              {
                "CodeListing" : ""
              },
              {
                "Para" : "This method only returns values from custom fields. Pre-filled data can be accessed directly through the `preFilledData` property."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift\" line=\"568\" column=\"17\"><Name>getCustomFieldValues()<\/Name><USR>s:14SimpleLoggerUI25ReporterViewConfigurationC20getCustomFieldValuesSDyS2SGyF<\/USR><Declaration>@MainActor public func getCustomFieldValues() -&gt; [String : String]<\/Declaration><CommentParts><Abstract><Para>Retrieves the current values from all custom form fields as a dictionary.<\/Para><\/Abstract><ResultDiscussion><Para>A dictionary mapping field keys to their current string values. Returns an empty dictionary if no custom fields are configured.<\/Para><\/ResultDiscussion><Discussion><Para>This method collects the current state of all custom form fields and returns them as a dictionary where keys are the field identifiers and values are the current field values as strings.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Usage<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let values = config.getCustomFieldValues()]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(values) \/\/ [\"email\": \"user@example.com\", \"category\": \"Bug\"]]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>This method only returns values from custom fields. Pre-filled data can be accessed directly through the <codeVoice>preFilledData<\/codeVoice> property.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 568,
            "key.doc.name" : "getCustomFieldValues()",
            "key.doc.result_discussion" : [
              {
                "Para" : "A dictionary mapping field keys to their current string values. Returns an empty dictionary if no custom fields are configured."
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 820,
            "key.docoffset" : 22543,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>getCustomFieldValues<\/decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.is_dynamic" : true,
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 290,
            "key.line" : 568,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "getCustomFieldValues()",
            "key.namelength" : 22,
            "key.nameoffset" : 23379,
            "key.offset" : 23374,
            "key.parsed_declaration" : "public func getCustomFieldValues() -> [String: String]",
            "key.parsed_scope.end" : 576,
            "key.parsed_scope.start" : 568,
            "key.receivers" : [
              {
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
              }
            ],
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var values: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Models\/ReporterViewConfiguration.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>values<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 34,
                "key.line" : 571,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "values",
                "key.namelength" : 6,
                "key.nameoffset" : 23511,
                "key.offset" : 23507,
                "key.parsed_declaration" : "var values: [String: String] = [:]",
                "key.parsed_scope.end" : 571,
                "key.parsed_scope.start" : 571,
                "key.reusingastcontext" : false,
                "key.typename" : "[String : String]",
                "key.typeusr" : "$sSDyS2SGD",
                "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC20getCustomFieldValuesSDyS2SGyF6valuesL_AEvp"
              }
            ],
            "key.typename" : "(ReporterViewConfiguration) -> () -> [String : String]",
            "key.typeusr" : "$sSDyS2SGycD",
            "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC20getCustomFieldValuesSDyS2SGyF"
          }
        ],
        "key.typename" : "ReporterViewConfiguration.Type",
        "key.typeusr" : "$s14SimpleLoggerUI25ReporterViewConfigurationCmD",
        "key.usr" : "s:14SimpleLoggerUI25ReporterViewConfigurationC"
      }
    ]
  }
}, {
  "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6516,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public struct ReporterFormNavWrapper : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3598
          }
        ],
        "key.bodylength" : 2872,
        "key.bodyoffset" : 3642,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A navigation wrapper view that provides a NavigationStack container for the bug reporting form.\n\n`ReporterFormNavWrapper` is a convenience view that wraps ``ReporterFormView`` within a\n`NavigationStack`, providing the necessary navigation context for the bug reporting interface.\nThis wrapper is useful when you need to present the reporter form in contexts where a\nnavigation container is required but not already present.\n\n## Overview\n\nThis wrapper serves as a bridge between the core ``ReporterFormView`` and presentation\ncontexts that require navigation functionality. It automatically provides:\n- Navigation stack container for proper navigation behavior\n- Seamless integration with SwiftUI's navigation system\n- Consistent navigation appearance across different presentation contexts\n\n## Usage\n\n### Basic Usage\n\n```swift\nlet config = ReporterViewConfiguration(\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        submitBugReport(issueText, preFilledData, customFields, logInfo)\n    }\n)\n\nReporterFormNavWrapper(configuration: config)\n```\n\n### Presenting as a Sheet\n\n```swift\n@State private var showingBugReport = false\n\nButton(\"Report Bug\") {\n    showingBugReport = true\n}\n.sheet(isPresented: $showingBugReport) {\n    let config = ReporterViewConfiguration(\n        sendAction: { issueText, preFilledData, customFields, logInfo in\n            \/\/ Handle submission and dismiss\n            submitReport(issueText, preFilledData, customFields, logInfo)\n            showingBugReport = false\n        }\n    )\n    ReporterFormNavWrapper(configuration: config)\n}\n```\n\n### Presenting as Full Screen Cover\n\n```swift\n@State private var showingBugReport = false\n\nButton(\"Report Issue\") {\n    showingBugReport = true\n}\n.fullScreenCover(isPresented: $showingBugReport) {\n    let config = ReporterViewConfiguration(\n        navigationBarTitle: \"Bug Report\",\n        sendAction: { issueText, preFilledData, customFields, logInfo in\n            handleBugReport(issueText, preFilledData, customFields, logInfo)\n            showingBugReport = false\n        }\n    )\n    ReporterFormNavWrapper(configuration: config)\n}\n```\n\n## When to Use\n\nUse `ReporterFormNavWrapper` when:\n- Presenting the bug reporter in a sheet or full screen cover\n- The current view hierarchy doesn't already have a NavigationStack\n- You need a simple, one-step solution for bug reporting UI\n\nUse ``ReporterFormView`` directly when:\n- You're already within a NavigationStack or NavigationView\n- You need more control over the navigation presentation\n- You're integrating the form into an existing navigation flow\n\n## Important\nThe `ReporterFormNavWrapper` requires a custom `sendAction` closure to be provided in the configuration.\nThere is no default send report implementation - you must handle the report submission yourself\nby implementing the `sendAction` closure in your `ReporterViewConfiguration`.\n\n## Topics\n\n### View Properties\n\n- ``configuration``\n- ``body``\n\n## See Also\n\n- ``ReporterFormView``\n- ``ReporterViewConfiguration``",
        "key.doc.column" : 15,
        "key.doc.comment" : "A navigation wrapper view that provides a NavigationStack container for the bug reporting form.\n\n`ReporterFormNavWrapper` is a convenience view that wraps ``ReporterFormView`` within a\n`NavigationStack`, providing the necessary navigation context for the bug reporting interface.\nThis wrapper is useful when you need to present the reporter form in contexts where a\nnavigation container is required but not already present.\n\n## Overview\n\nThis wrapper serves as a bridge between the core ``ReporterFormView`` and presentation\ncontexts that require navigation functionality. It automatically provides:\n- Navigation stack container for proper navigation behavior\n- Seamless integration with SwiftUI's navigation system\n- Consistent navigation appearance across different presentation contexts\n\n## Usage\n\n### Basic Usage\n\n```swift\nlet config = ReporterViewConfiguration(\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        submitBugReport(issueText, preFilledData, customFields, logInfo)\n    }\n)\n\nReporterFormNavWrapper(configuration: config)\n```\n\n### Presenting as a Sheet\n\n```swift\n@State private var showingBugReport = false\n\nButton(\"Report Bug\") {\n    showingBugReport = true\n}\n.sheet(isPresented: $showingBugReport) {\n    let config = ReporterViewConfiguration(\n        sendAction: { issueText, preFilledData, customFields, logInfo in\n            \/\/ Handle submission and dismiss\n            submitReport(issueText, preFilledData, customFields, logInfo)\n            showingBugReport = false\n        }\n    )\n    ReporterFormNavWrapper(configuration: config)\n}\n```\n\n### Presenting as Full Screen Cover\n\n```swift\n@State private var showingBugReport = false\n\nButton(\"Report Issue\") {\n    showingBugReport = true\n}\n.fullScreenCover(isPresented: $showingBugReport) {\n    let config = ReporterViewConfiguration(\n        navigationBarTitle: \"Bug Report\",\n        sendAction: { issueText, preFilledData, customFields, logInfo in\n            handleBugReport(issueText, preFilledData, customFields, logInfo)\n            showingBugReport = false\n        }\n    )\n    ReporterFormNavWrapper(configuration: config)\n}\n```\n\n## When to Use\n\nUse `ReporterFormNavWrapper` when:\n- Presenting the bug reporter in a sheet or full screen cover\n- The current view hierarchy doesn't already have a NavigationStack\n- You need a simple, one-step solution for bug reporting UI\n\nUse ``ReporterFormView`` directly when:\n- You're already within a NavigationStack or NavigationView\n- You need more control over the navigation presentation\n- You're integrating the form into an existing navigation flow\n\n## Important\nThe `ReporterFormNavWrapper` requires a custom `sendAction` closure to be provided in the configuration.\nThere is no default send report implementation - you must handle the report submission yourself\nby implementing the `sendAction` closure in your `ReporterViewConfiguration`.\n\n## Topics\n\n### View Properties\n\n- ``configuration``\n- ``body``\n\n## See Also\n\n- ``ReporterFormView``\n- ``ReporterViewConfiguration``",
        "key.doc.declaration" : "@MainActor public struct ReporterFormNavWrapper : View",
        "key.doc.discussion" : [
          {
            "Para" : "`ReporterFormNavWrapper` is a convenience view that wraps `ReporterFormView` within a `NavigationStack`, providing the necessary navigation context for the bug reporting interface. This wrapper is useful when you need to present the reporter form in contexts where a navigation container is required but not already present."
          },
          {
            "Para" : "This wrapper serves as a bridge between the core `ReporterFormView` and presentation contexts that require navigation functionality. It automatically provides:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "CodeListing" : ""
          },
          {
            "CodeListing" : ""
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Use `ReporterFormNavWrapper` when:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "Use `ReporterFormView` directly when:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "The `ReporterFormNavWrapper` requires a custom `sendAction` closure to be provided in the configuration. There is no default send report implementation - you must handle the report submission yourself by implementing the `sendAction` closure in your `ReporterViewConfiguration`."
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift\" line=\"110\" column=\"15\"><Name>ReporterFormNavWrapper<\/Name><USR>s:14SimpleLoggerUI22ReporterFormNavWrapperV<\/USR><Declaration>@MainActor public struct ReporterFormNavWrapper : View<\/Declaration><CommentParts><Abstract><Para>A navigation wrapper view that provides a NavigationStack container for the bug reporting form.<\/Para><\/Abstract><Discussion><Para><codeVoice>ReporterFormNavWrapper<\/codeVoice> is a convenience view that wraps <codeVoice>ReporterFormView<\/codeVoice> within a <codeVoice>NavigationStack<\/codeVoice>, providing the necessary navigation context for the bug reporting interface. This wrapper is useful when you need to present the reporter form in contexts where a navigation container is required but not already present.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Overview<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>This wrapper serves as a bridge between the core <codeVoice>ReporterFormView<\/codeVoice> and presentation contexts that require navigation functionality. It automatically provides:<\/Para><List-Bullet><Item><Para>Navigation stack container for proper navigation behavior<\/Para><\/Item><Item><Para>Seamless integration with SwiftUI’s navigation system<\/Para><\/Item><Item><Para>Consistent navigation appearance across different presentation contexts<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Usage<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Basic Usage<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    sendAction: { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Handle the bug report submission]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        submitBugReport(issueText, preFilledData, customFields, logInfo)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ReporterFormNavWrapper(configuration: config)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h3>]]><\/rawHTML>Presenting as a Sheet<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[@State private var showingBugReport = false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[Button(\"Report Bug\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showingBugReport = true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[.sheet(isPresented: $showingBugReport) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        sendAction: { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            \/\/ Handle submission and dismiss]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            submitReport(issueText, preFilledData, customFields, logInfo)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            showingBugReport = false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    )]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ReporterFormNavWrapper(configuration: config)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h3>]]><\/rawHTML>Presenting as Full Screen Cover<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[@State private var showingBugReport = false]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[Button(\"Report Issue\") {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showingBugReport = true]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[.fullScreenCover(isPresented: $showingBugReport) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        navigationBarTitle: \"Bug Report\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        sendAction: { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            handleBugReport(issueText, preFilledData, customFields, logInfo)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            showingBugReport = false]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    )]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ReporterFormNavWrapper(configuration: config)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>When to Use<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Use <codeVoice>ReporterFormNavWrapper<\/codeVoice> when:<\/Para><List-Bullet><Item><Para>Presenting the bug reporter in a sheet or full screen cover<\/Para><\/Item><Item><Para>The current view hierarchy doesn’t already have a NavigationStack<\/Para><\/Item><Item><Para>You need a simple, one-step solution for bug reporting UI<\/Para><\/Item><\/List-Bullet><Para>Use <codeVoice>ReporterFormView<\/codeVoice> directly when:<\/Para><List-Bullet><Item><Para>You’re already within a NavigationStack or NavigationView<\/Para><\/Item><Item><Para>You need more control over the navigation presentation<\/Para><\/Item><Item><Para>You’re integrating the form into an existing navigation flow<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Important<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The <codeVoice>ReporterFormNavWrapper<\/codeVoice> requires a custom <codeVoice>sendAction<\/codeVoice> closure to be provided in the configuration. There is no default send report implementation - you must handle the report submission yourself by implementing the <codeVoice>sendAction<\/codeVoice> closure in your <codeVoice>ReporterViewConfiguration<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Topics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>View Properties<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>configuration<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>body<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>See Also<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>ReporterFormView<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>ReporterViewConfiguration<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 110,
        "key.doc.name" : "ReporterFormNavWrapper",
        "key.doc.type" : "Class",
        "key.doclength" : 3435,
        "key.docoffset" : 163,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 4,
            "key.offset" : 3636
          }
        ],
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ReporterFormNavWrapper<\/decl.name> : <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "View"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 2910,
        "key.line" : 110,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "ReporterFormNavWrapper",
        "key.namelength" : 22,
        "key.nameoffset" : 3612,
        "key.offset" : 3605,
        "key.parsed_declaration" : "public struct ReporterFormNavWrapper: View",
        "key.parsed_scope.end" : 179,
        "key.parsed_scope.start" : 110,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public let configuration: <Type usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4901
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The configuration object that defines the form's appearance and behavior.\n\nThis constant contains all customization options for the bug reporting form, including\ntext content, section visibility, custom fields, pre-filled data settings, and most\nimportantly, the `sendAction` closure that handles report submission.\n\nThe configuration is set during initialization and remains constant throughout\nthe view's lifecycle. It is passed through to the underlying ``ReporterFormView``\nto control its behavior and appearance.\n\n## Example\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Submit Feedback\",\n    showPrefilledDataSection: true,\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        MyReportingService.submit(\n            description: issueText,\n            deviceInfo: preFilledData,\n            additionalFields: customFields,\n            logData: logInfo\n        )\n    }\n)\n```\n\n## See Also\n- ``ReporterViewConfiguration``",
            "key.doc.column" : 16,
            "key.doc.comment" : "The configuration object that defines the form's appearance and behavior.\n\nThis constant contains all customization options for the bug reporting form, including\ntext content, section visibility, custom fields, pre-filled data settings, and most\nimportantly, the `sendAction` closure that handles report submission.\n\nThe configuration is set during initialization and remains constant throughout\nthe view's lifecycle. It is passed through to the underlying ``ReporterFormView``\nto control its behavior and appearance.\n\n## Example\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Submit Feedback\",\n    showPrefilledDataSection: true,\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        MyReportingService.submit(\n            description: issueText,\n            deviceInfo: preFilledData,\n            additionalFields: customFields,\n            logData: logInfo\n        )\n    }\n)\n```\n\n## See Also\n- ``ReporterViewConfiguration``",
            "key.doc.declaration" : "@MainActor public let configuration: ReporterViewConfiguration",
            "key.doc.discussion" : [
              {
                "Para" : "This constant contains all customization options for the bug reporting form, including text content, section visibility, custom fields, pre-filled data settings, and most importantly, the `sendAction` closure that handles report submission."
              },
              {
                "Para" : "The configuration is set during initialization and remains constant throughout the view’s lifecycle. It is passed through to the underlying `ReporterFormView` to control its behavior and appearance."
              },
              {
                "CodeListing" : ""
              },
              {
                "List-Bullet" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift\" line=\"141\" column=\"16\"><Name>configuration<\/Name><USR>s:14SimpleLoggerUI22ReporterFormNavWrapperV13configurationAA0D17ViewConfigurationCvp<\/USR><Declaration>@MainActor public let configuration: ReporterViewConfiguration<\/Declaration><CommentParts><Abstract><Para>The configuration object that defines the form’s appearance and behavior.<\/Para><\/Abstract><Discussion><Para>This constant contains all customization options for the bug reporting form, including text content, section visibility, custom fields, pre-filled data settings, and most importantly, the <codeVoice>sendAction<\/codeVoice> closure that handles report submission.<\/Para><Para>The configuration is set during initialization and remains constant throughout the view’s lifecycle. It is passed through to the underlying <codeVoice>ReporterFormView<\/codeVoice> to control its behavior and appearance.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    navigationBarTitle: \"Submit Feedback\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showPrefilledDataSection: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    sendAction: { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Handle the bug report submission]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        MyReportingService.submit(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            description: issueText,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            deviceInfo: preFilledData,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            additionalFields: customFields,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            logData: logInfo]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        )]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>See Also<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>ReporterViewConfiguration<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 141,
            "key.doc.name" : "configuration",
            "key.doc.type" : "Other",
            "key.doclength" : 1245,
            "key.docoffset" : 3652,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>configuration<\/decl.name>: <decl.var.type><ref.class usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.line" : 141,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 4912,
            "key.offset" : 4908,
            "key.parsed_declaration" : "public let configuration: ReporterViewConfiguration",
            "key.parsed_scope.end" : 141,
            "key.parsed_scope.start" : 141,
            "key.reusingastcontext" : false,
            "key.typename" : "ReporterViewConfiguration",
            "key.typeusr" : "$s14SimpleLoggerUI25ReporterViewConfigurationCD",
            "key.usr" : "s:14SimpleLoggerUI22ReporterFormNavWrapperV13configurationAA0D17ViewConfigurationCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public init(configuration: <Type usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5219
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 5274,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Creates a new navigation wrapper for the reporter form with the specified configuration.\n\n- Parameter configuration: The configuration object that defines the form's\n  appearance, behavior, custom fields, and action handlers.",
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new navigation wrapper for the reporter form with the specified configuration.\n\n- Parameter configuration: The configuration object that defines the form's\n  appearance, behavior, custom fields, and action handlers.",
            "key.doc.declaration" : "@MainActor public init(configuration: ReporterViewConfiguration)",
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift\" line=\"147\" column=\"12\"><Name>init(configuration:)<\/Name><USR>s:14SimpleLoggerUI22ReporterFormNavWrapperV13configurationAcA0D17ViewConfigurationC_tcfc<\/USR><Declaration>@MainActor public init(configuration: ReporterViewConfiguration)<\/Declaration><CommentParts><Abstract><Para>Creates a new navigation wrapper for the reporter form with the specified configuration.<\/Para><\/Abstract><Parameters><Parameter><Name>configuration<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The configuration object that defines the form’s appearance, behavior, custom fields, and action handlers.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 147,
            "key.doc.name" : "init(configuration:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The configuration object that defines the form’s appearance, behavior, custom fields, and action handlers."
                  }
                ],
                "name" : "configuration"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 253,
            "key.docoffset" : 4962,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 97,
            "key.line" : 147,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "init(configuration:)",
            "key.namelength" : 46,
            "key.nameoffset" : 5226,
            "key.offset" : 5226,
            "key.parsed_declaration" : "public init(configuration: ReporterViewConfiguration)",
            "key.parsed_scope.end" : 149,
            "key.parsed_scope.start" : 147,
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(ReporterFormNavWrapper.Type) -> (ReporterViewConfiguration) -> ReporterFormNavWrapper",
            "key.typeusr" : "$s13configuration14SimpleLoggerUI22ReporterFormNavWrapperVAB0E17ViewConfigurationC_tcD",
            "key.usr" : "s:14SimpleLoggerUI22ReporterFormNavWrapperV13configurationAcA0D17ViewConfigurationC_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var body: some <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 6379
              }
            ],
            "key.bodylength" : 100,
            "key.bodyoffset" : 6407,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The main view body that renders the navigation-wrapped bug reporting form.\n\nThe body creates a `NavigationStack` that contains a ``ReporterFormView`` configured\nwith the provided configuration object. This structure ensures that the bug reporting\nform has the necessary navigation context for proper operation, including:\n\n- Navigation bar with title and send button\n- Proper navigation behavior and animations\n- Integration with SwiftUI's navigation system\n\nThe underlying ``ReporterFormView`` handles all the form logic, data collection,\nand report submission through the configuration's `sendAction` closure.\n\n## Navigation Structure\n```\nNavigationStack\n└── ReporterFormView\n    ├── Bug Description Section\n    ├── Custom Fields Section (optional)\n    ├── Pre-filled Data Section (optional)\n    └── Log Files Information Section (optional)\n```",
            "key.doc.column" : 16,
            "key.doc.comment" : "The main view body that renders the navigation-wrapped bug reporting form.\n\nThe body creates a `NavigationStack` that contains a ``ReporterFormView`` configured\nwith the provided configuration object. This structure ensures that the bug reporting\nform has the necessary navigation context for proper operation, including:\n\n- Navigation bar with title and send button\n- Proper navigation behavior and animations\n- Integration with SwiftUI's navigation system\n\nThe underlying ``ReporterFormView`` handles all the form logic, data collection,\nand report submission through the configuration's `sendAction` closure.\n\n## Navigation Structure\n```\nNavigationStack\n└── ReporterFormView\n    ├── Bug Description Section\n    ├── Custom Fields Section (optional)\n    ├── Pre-filled Data Section (optional)\n    └── Log Files Information Section (optional)\n```",
            "key.doc.declaration" : "@MainActor public var body: some View { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The body creates a `NavigationStack` that contains a `ReporterFormView` configured with the provided configuration object. This structure ensures that the bug reporting form has the necessary navigation context for proper operation, including:"
              },
              {
                "List-Bullet" : ""
              },
              {
                "Para" : "The underlying `ReporterFormView` handles all the form logic, data collection, and report submission through the configuration’s `sendAction` closure."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift\" line=\"173\" column=\"16\"><Name>body<\/Name><USR>s:14SimpleLoggerUI22ReporterFormNavWrapperV4bodyQrvp<\/USR><Declaration>@MainActor public var body: some View { get }<\/Declaration><CommentParts><Abstract><Para>The main view body that renders the navigation-wrapped bug reporting form.<\/Para><\/Abstract><Discussion><Para>The body creates a <codeVoice>NavigationStack<\/codeVoice> that contains a <codeVoice>ReporterFormView<\/codeVoice> configured with the provided configuration object. This structure ensures that the bug reporting form has the necessary navigation context for proper operation, including:<\/Para><List-Bullet><Item><Para>Navigation bar with title and send button<\/Para><\/Item><Item><Para>Proper navigation behavior and animations<\/Para><\/Item><Item><Para>Integration with SwiftUI’s navigation system<\/Para><\/Item><\/List-Bullet><Para>The underlying <codeVoice>ReporterFormView<\/codeVoice> handles all the form logic, data collection, and report submission through the configuration’s <codeVoice>sendAction<\/codeVoice> closure.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Navigation Structure<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[NavigationStack]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[└── ReporterFormView]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ├── Bug Description Section]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ├── Custom Fields Section (optional)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ├── Pre-filled Data Section (optional)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    └── Log Files Information Section (optional)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 173,
            "key.doc.name" : "body",
            "key.doc.type" : "Other",
            "key.doclength" : 1045,
            "key.docoffset" : 5330,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormNavWrapper.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>body<\/decl.name>: <decl.var.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 122,
            "key.line" : 173,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "body",
            "key.namelength" : 4,
            "key.nameoffset" : 6390,
            "key.offset" : 6386,
            "key.overrides" : [
              {
                "key.usr" : "s:7SwiftUI4ViewP4body4BodyQzvp"
              }
            ],
            "key.parsed_declaration" : "public var body: some View",
            "key.parsed_scope.end" : 177,
            "key.parsed_scope.start" : 173,
            "key.reusingastcontext" : false,
            "key.typename" : "some View",
            "key.typeusr" : "$sQrD",
            "key.usr" : "s:14SimpleLoggerUI22ReporterFormNavWrapperV4bodyQrvp"
          }
        ],
        "key.typename" : "ReporterFormNavWrapper.Type",
        "key.typeusr" : "$s14SimpleLoggerUI22ReporterFormNavWrapperVmD",
        "key.usr" : "s:14SimpleLoggerUI22ReporterFormNavWrapperV"
      }
    ]
  }
}, {
  "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 11329,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
        "key.annotated_decl" : "<Declaration>fileprivate typealias Logger = <Type usr=\"s:12SimpleLoggerAAC\">SimpleLogger<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.fileprivate",
            "key.length" : 11,
            "key.offset" : 198
          }
        ],
        "key.column" : 23,
        "key.decl_lang" : "source.lang.swift",
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>Logger<\/decl.name> = <ref.class usr=\"s:12SimpleLoggerAAC\">SimpleLogger<\/ref.class><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 31,
        "key.line" : 14,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "Logger",
        "key.namelength" : 6,
        "key.nameoffset" : 220,
        "key.offset" : 210,
        "key.parsed_declaration" : "fileprivate typealias Logger = SimpleLogger",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 14,
        "key.reusingastcontext" : false,
        "key.typename" : "SimpleLogger.Type",
        "key.typeusr" : "$s12SimpleLoggerAACmD",
        "key.usr" : "s:14SimpleLoggerUI0B033_F249316DE1000F329B4B271A5A79D86DLLa"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public struct ReporterFormView : <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3528
          }
        ],
        "key.bodylength" : 7575,
        "key.bodyoffset" : 3566,
        "key.column" : 15,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "A SwiftUI view that renders a comprehensive bug reporting form interface.\n\n`ReporterFormView` provides a structured form for collecting bug reports from users,\nincluding a main description field, optional custom form fields, automatically\ncollected device information, and log files information. The view is highly configurable\nthrough a ``ReporterViewConfiguration`` object.\n\n## Overview\n\nThe form consists of up to four main sections:\n1. **Bug Description Section**: A text editor where users describe the issue\n2. **Custom Fields Section**: Optional additional input fields (if configured)\n3. **Pre-filled Data Section**: Automatically collected device and app information (if enabled)\n4. **Log Files Information Section**: Details about log files that will be included in the report (if enabled)\n\n## Usage\n\n### Basic Usage\n\n```swift\nlet config = ReporterViewConfiguration(\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        print(\"Issue: \\(issueText)\")\n        \/\/ Process the collected data and send the report\n    }\n)\n\nReporterFormView(configuration: config)\n```\n\n### Advanced Usage with Custom Fields and Log Files\n\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Report Problem\",\n    customFields: [\n        CustomFormFieldWrapper(field: EmailFormField()),\n        CustomFormFieldWrapper(field: CategoryField())\n    ],\n    showPrefilledDataSection: true,\n    showLogFilesInformation: true,\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission with all collected data\n        submitBugReport(\n            description: issueText,\n            deviceInfo: preFilledData,\n            customData: customFields,\n            logs: logInfo.1\n        )\n    }\n)\n\nReporterFormView(configuration: config)\n```\n\n## Important\nThe `ReporterFormView` requires a custom `sendAction` closure to be provided in the configuration.\nThere is no default send report implementation - you must handle the report submission yourself\nby implementing the `sendAction` closure in your `ReporterViewConfiguration`.\n\n## Features\n\n- **Self-Contained State**: The view manages its own issue text state internally\n- **Responsive Text Input**: The bug description field uses a `TextEditor` with placeholder text\n- **Dynamic Sections**: Sections appear\/disappear based on configuration settings\n- **Localized Content**: All text content supports localization through the `localized()` extension\n- **Sorted Data Display**: Pre-filled data and log files information are automatically sorted alphabetically by key\n- **Navigation Integration**: Includes navigation title and works within navigation stacks\n- **Log Files Display**: Shows detailed information about log files that will be included in bug reports\n\n## Topics\n\n### Creating a Reporter Form View\n\n- ``init(configuration:)``\n\n### View Properties\n\n- ``body``\n- ``issueText``\n- ``configuration``",
        "key.doc.column" : 15,
        "key.doc.comment" : "A SwiftUI view that renders a comprehensive bug reporting form interface.\n\n`ReporterFormView` provides a structured form for collecting bug reports from users,\nincluding a main description field, optional custom form fields, automatically\ncollected device information, and log files information. The view is highly configurable\nthrough a ``ReporterViewConfiguration`` object.\n\n## Overview\n\nThe form consists of up to four main sections:\n1. **Bug Description Section**: A text editor where users describe the issue\n2. **Custom Fields Section**: Optional additional input fields (if configured)\n3. **Pre-filled Data Section**: Automatically collected device and app information (if enabled)\n4. **Log Files Information Section**: Details about log files that will be included in the report (if enabled)\n\n## Usage\n\n### Basic Usage\n\n```swift\nlet config = ReporterViewConfiguration(\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission\n        print(\"Issue: \\(issueText)\")\n        \/\/ Process the collected data and send the report\n    }\n)\n\nReporterFormView(configuration: config)\n```\n\n### Advanced Usage with Custom Fields and Log Files\n\n```swift\nlet config = ReporterViewConfiguration(\n    navigationBarTitle: \"Report Problem\",\n    customFields: [\n        CustomFormFieldWrapper(field: EmailFormField()),\n        CustomFormFieldWrapper(field: CategoryField())\n    ],\n    showPrefilledDataSection: true,\n    showLogFilesInformation: true,\n    sendAction: { issueText, preFilledData, customFields, logInfo in\n        \/\/ Handle the bug report submission with all collected data\n        submitBugReport(\n            description: issueText,\n            deviceInfo: preFilledData,\n            customData: customFields,\n            logs: logInfo.1\n        )\n    }\n)\n\nReporterFormView(configuration: config)\n```\n\n## Important\nThe `ReporterFormView` requires a custom `sendAction` closure to be provided in the configuration.\nThere is no default send report implementation - you must handle the report submission yourself\nby implementing the `sendAction` closure in your `ReporterViewConfiguration`.\n\n## Features\n\n- **Self-Contained State**: The view manages its own issue text state internally\n- **Responsive Text Input**: The bug description field uses a `TextEditor` with placeholder text\n- **Dynamic Sections**: Sections appear\/disappear based on configuration settings\n- **Localized Content**: All text content supports localization through the `localized()` extension\n- **Sorted Data Display**: Pre-filled data and log files information are automatically sorted alphabetically by key\n- **Navigation Integration**: Includes navigation title and works within navigation stacks\n- **Log Files Display**: Shows detailed information about log files that will be included in bug reports\n\n## Topics\n\n### Creating a Reporter Form View\n\n- ``init(configuration:)``\n\n### View Properties\n\n- ``body``\n- ``issueText``\n- ``configuration``",
        "key.doc.declaration" : "@MainActor public struct ReporterFormView : View",
        "key.doc.discussion" : [
          {
            "Para" : "`ReporterFormView` provides a structured form for collecting bug reports from users, including a main description field, optional custom form fields, automatically collected device information, and log files information. The view is highly configurable through a `ReporterViewConfiguration` object."
          },
          {
            "Para" : "The form consists of up to four main sections:"
          },
          {
            "List-Number" : ""
          },
          {
            "CodeListing" : ""
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `ReporterFormView` requires a custom `sendAction` closure to be provided in the configuration. There is no default send report implementation - you must handle the report submission yourself by implementing the `sendAction` closure in your `ReporterViewConfiguration`."
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          },
          {
            "List-Bullet" : ""
          }
        ],
        "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift\" line=\"98\" column=\"15\"><Name>ReporterFormView<\/Name><USR>s:14SimpleLoggerUI16ReporterFormViewV<\/USR><Declaration>@MainActor public struct ReporterFormView : View<\/Declaration><CommentParts><Abstract><Para>A SwiftUI view that renders a comprehensive bug reporting form interface.<\/Para><\/Abstract><Discussion><Para><codeVoice>ReporterFormView<\/codeVoice> provides a structured form for collecting bug reports from users, including a main description field, optional custom form fields, automatically collected device information, and log files information. The view is highly configurable through a <codeVoice>ReporterViewConfiguration<\/codeVoice> object.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Overview<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The form consists of up to four main sections:<\/Para><List-Number><Item><Para><bold>Bug Description Section<\/bold>: A text editor where users describe the issue<\/Para><\/Item><Item><Para><bold>Custom Fields Section<\/bold>: Optional additional input fields (if configured)<\/Para><\/Item><Item><Para><bold>Pre-filled Data Section<\/bold>: Automatically collected device and app information (if enabled)<\/Para><\/Item><Item><Para><bold>Log Files Information Section<\/bold>: Details about log files that will be included in the report (if enabled)<\/Para><\/Item><\/List-Number><rawHTML><![CDATA[<h2>]]><\/rawHTML>Usage<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Basic Usage<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    sendAction: { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Handle the bug report submission]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        print(\"Issue: \\(issueText)\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Process the collected data and send the report]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ReporterFormView(configuration: config)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h3>]]><\/rawHTML>Advanced Usage with Custom Fields and Log Files<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let config = ReporterViewConfiguration(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    navigationBarTitle: \"Report Problem\",]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    customFields: []]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        CustomFormFieldWrapper(field: EmailFormField()),]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        CustomFormFieldWrapper(field: CategoryField())]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ],]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showPrefilledDataSection: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    showLogFilesInformation: true,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    sendAction: { issueText, preFilledData, customFields, logInfo in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Handle the bug report submission with all collected data]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        submitBugReport(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            description: issueText,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            deviceInfo: preFilledData,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            customData: customFields,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            logs: logInfo.1]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        )]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[ReporterFormView(configuration: config)]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Important<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The <codeVoice>ReporterFormView<\/codeVoice> requires a custom <codeVoice>sendAction<\/codeVoice> closure to be provided in the configuration. There is no default send report implementation - you must handle the report submission yourself by implementing the <codeVoice>sendAction<\/codeVoice> closure in your <codeVoice>ReporterViewConfiguration<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Features<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><List-Bullet><Item><Para><bold>Self-Contained State<\/bold>: The view manages its own issue text state internally<\/Para><\/Item><Item><Para><bold>Responsive Text Input<\/bold>: The bug description field uses a <codeVoice>TextEditor<\/codeVoice> with placeholder text<\/Para><\/Item><Item><Para><bold>Dynamic Sections<\/bold>: Sections appear\/disappear based on configuration settings<\/Para><\/Item><Item><Para><bold>Localized Content<\/bold>: All text content supports localization through the <codeVoice>localized()<\/codeVoice> extension<\/Para><\/Item><Item><Para><bold>Sorted Data Display<\/bold>: Pre-filled data and log files information are automatically sorted alphabetically by key<\/Para><\/Item><Item><Para><bold>Navigation Integration<\/bold>: Includes navigation title and works within navigation stacks<\/Para><\/Item><Item><Para><bold>Log Files Display<\/bold>: Shows detailed information about log files that will be included in bug reports<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Topics<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><rawHTML><![CDATA[<h3>]]><\/rawHTML>Creating a Reporter Form View<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>init(configuration:)<\/codeVoice><\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h3>]]><\/rawHTML>View Properties<rawHTML><![CDATA[<\/h3>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>body<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>issueText<\/codeVoice><\/Para><\/Item><Item><Para><codeVoice>configuration<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 98,
        "key.doc.name" : "ReporterFormView",
        "key.doc.type" : "Class",
        "key.doclength" : 3285,
        "key.docoffset" : 243,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 4,
            "key.offset" : 3560
          }
        ],
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ReporterFormView<\/decl.name> : <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "View"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 7607,
        "key.line" : 98,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "ReporterFormView",
        "key.namelength" : 16,
        "key.nameoffset" : 3542,
        "key.offset" : 3535,
        "key.parsed_declaration" : "public struct ReporterFormView: View",
        "key.parsed_scope.end" : 270,
        "key.parsed_scope.start" : 98,
        "key.reusingastcontext" : false,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:7SwiftUI5StateV\">State<\/Type> @<Type usr=\"s:ScM\">MainActor<\/Type> private var issueText: <Type usr=\"s:SS\">String<\/Type> { get nonmutating set }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3998
              },
              {
                "key.attribute" : "source.decl.attribute._custom",
                "key.length" : 6,
                "key.offset" : 3991
              }
            ],
            "key.column" : 24,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The bug description text entered by the user.\n\nThis private state property manages the text content of the bug description\ntext editor internally. The text is initialized as empty and is displayed\nin a `TextEditor` with placeholder text when empty.\n\nThe text content is automatically passed to the `sendAction` closure when\nthe user submits the report.",
            "key.doc.column" : 24,
            "key.doc.comment" : "The bug description text entered by the user.\n\nThis private state property manages the text content of the bug description\ntext editor internally. The text is initialized as empty and is displayed\nin a `TextEditor` with placeholder text when empty.\n\nThe text content is automatically passed to the `sendAction` closure when\nthe user submits the report.",
            "key.doc.declaration" : "@State @MainActor private var issueText: String { get nonmutating set }",
            "key.doc.discussion" : [
              {
                "Para" : "This private state property manages the text content of the bug description text editor internally. The text is initialized as empty and is displayed in a `TextEditor` with placeholder text when empty."
              },
              {
                "Para" : "The text content is automatically passed to the `sendAction` closure when the user submits the report."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift\" line=\"108\" column=\"24\"><Name>issueText<\/Name><USR>s:14SimpleLoggerUI16ReporterFormViewV9issueText33_F249316DE1000F329B4B271A5A79D86DLLSSvp<\/USR><Declaration>@State @MainActor private var issueText: String { get nonmutating set }<\/Declaration><CommentParts><Abstract><Para>The bug description text entered by the user.<\/Para><\/Abstract><Discussion><Para>This private state property manages the text content of the bug description text editor internally. The text is initialized as empty and is displayed in a <codeVoice>TextEditor<\/codeVoice> with placeholder text when empty.<\/Para><Para>The text content is automatically passed to the <codeVoice>sendAction<\/codeVoice> closure when the user submits the report.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 108,
            "key.doc.name" : "issueText",
            "key.doc.type" : "Other",
            "key.doclength" : 411,
            "key.docoffset" : 3576,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.struct usr=\"s:7SwiftUI5StateV\">State<\/ref.struct><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>issueText<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>nonmutating<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 26,
            "key.line" : 108,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "issueText",
            "key.namelength" : 9,
            "key.nameoffset" : 4010,
            "key.offset" : 4006,
            "key.parsed_declaration" : "@State private var issueText: String = \"\"",
            "key.parsed_scope.end" : 108,
            "key.parsed_scope.start" : 108,
            "key.reusingastcontext" : false,
            "key.setter_accessibility" : "source.lang.swift.accessibility.private",
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV9issueText33_F249316DE1000F329B4B271A5A79D86DLLSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public let configuration: <Type usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4485
              }
            ],
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The configuration object that defines the form's appearance and behavior.\n\nThis constant contains all customization options for the form, including\ntext content, section visibility, custom fields, and pre-filled data settings.\nThe configuration is set during initialization and remains constant throughout\nthe view's lifecycle.\n\n## See Also\n- ``ReporterViewConfiguration``",
            "key.doc.column" : 16,
            "key.doc.comment" : "The configuration object that defines the form's appearance and behavior.\n\nThis constant contains all customization options for the form, including\ntext content, section visibility, custom fields, and pre-filled data settings.\nThe configuration is set during initialization and remains constant throughout\nthe view's lifecycle.\n\n## See Also\n- ``ReporterViewConfiguration``",
            "key.doc.declaration" : "@MainActor public let configuration: ReporterViewConfiguration",
            "key.doc.discussion" : [
              {
                "Para" : "This constant contains all customization options for the form, including text content, section visibility, custom fields, and pre-filled data settings. The configuration is set during initialization and remains constant throughout the view’s lifecycle."
              },
              {
                "List-Bullet" : ""
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift\" line=\"119\" column=\"16\"><Name>configuration<\/Name><USR>s:14SimpleLoggerUI16ReporterFormViewV13configurationAA0dF13ConfigurationCvp<\/USR><Declaration>@MainActor public let configuration: ReporterViewConfiguration<\/Declaration><CommentParts><Abstract><Para>The configuration object that defines the form’s appearance and behavior.<\/Para><\/Abstract><Discussion><Para>This constant contains all customization options for the form, including text content, section visibility, custom fields, and pre-filled data settings. The configuration is set during initialization and remains constant throughout the view’s lifecycle.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>See Also<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><List-Bullet><Item><Para><codeVoice>ReporterViewConfiguration<\/codeVoice><\/Para><\/Item><\/List-Bullet><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 119,
            "key.doc.name" : "configuration",
            "key.doc.type" : "Other",
            "key.doclength" : 439,
            "key.docoffset" : 4042,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>configuration<\/decl.name>: <decl.var.type><ref.class usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 44,
            "key.line" : 119,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "configuration",
            "key.namelength" : 13,
            "key.nameoffset" : 4496,
            "key.offset" : 4492,
            "key.parsed_declaration" : "public let configuration: ReporterViewConfiguration",
            "key.parsed_scope.end" : 119,
            "key.parsed_scope.start" : 119,
            "key.reusingastcontext" : false,
            "key.typename" : "ReporterViewConfiguration",
            "key.typeusr" : "$s14SimpleLoggerUI25ReporterViewConfigurationCD",
            "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV13configurationAA0dF13ConfigurationCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public init(configuration: <Type usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4781
              }
            ],
            "key.bodylength" : 48,
            "key.bodyoffset" : 4836,
            "key.column" : 12,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Creates a new reporter form view with the specified configuration.\n\n- Parameter configuration: The configuration object that defines the form's\n  appearance, behavior, custom fields, and action handlers.",
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new reporter form view with the specified configuration.\n\n- Parameter configuration: The configuration object that defines the form's\n  appearance, behavior, custom fields, and action handlers.",
            "key.doc.declaration" : "@MainActor public init(configuration: ReporterViewConfiguration)",
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift\" line=\"125\" column=\"12\"><Name>init(configuration:)<\/Name><USR>s:14SimpleLoggerUI16ReporterFormViewV13configurationAcA0dF13ConfigurationC_tcfc<\/USR><Declaration>@MainActor public init(configuration: ReporterViewConfiguration)<\/Declaration><CommentParts><Abstract><Para>Creates a new reporter form view with the specified configuration.<\/Para><\/Abstract><Parameters><Parameter><Name>configuration<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The configuration object that defines the form’s appearance, behavior, custom fields, and action handlers.<\/Para><\/Discussion><\/Parameter><\/Parameters><\/CommentParts><\/Function>",
            "key.doc.line" : 125,
            "key.doc.name" : "init(configuration:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The configuration object that defines the form’s appearance, behavior, custom fields, and action handlers."
                  }
                ],
                "name" : "configuration"
              }
            ],
            "key.doc.type" : "Function",
            "key.doclength" : 231,
            "key.docoffset" : 4546,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>configuration<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 97,
            "key.line" : 125,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "init(configuration:)",
            "key.namelength" : 46,
            "key.nameoffset" : 4788,
            "key.offset" : 4788,
            "key.parsed_declaration" : "public init(configuration: ReporterViewConfiguration)",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 125,
            "key.reusingastcontext" : false,
            "key.substructure" : [

            ],
            "key.typename" : "(ReporterFormView.Type) -> (ReporterViewConfiguration) -> ReporterFormView",
            "key.typeusr" : "$s13configuration14SimpleLoggerUI16ReporterFormViewVAB0eG13ConfigurationC_tcD",
            "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV13configurationAcA0dF13ConfigurationC_tcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> public var body: some <Type usr=\"s:7SwiftUI4ViewP\">View<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5768
              }
            ],
            "key.bodylength" : 3633,
            "key.bodyoffset" : 5796,
            "key.column" : 16,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "The main view body that renders the bug reporting form.\n\nThe body creates a `NavigationStack` containing a `Form` with up to four sections:\n- A bug description section with a text editor\n- An optional custom fields section (if configured)\n- An optional pre-filled data section (if enabled and data exists)\n- An optional log files information section (if enabled and log files data exists)\n\nAll text content is localized using the `localized()` extension, and sections\nare conditionally displayed based on the configuration settings. The log files\nsection displays information about log files that will be automatically included\nin the bug report for debugging purposes.\n\nA \"Send\" button is added to the trailing navigation bar item that handles report submission.",
            "key.doc.column" : 16,
            "key.doc.comment" : "The main view body that renders the bug reporting form.\n\nThe body creates a `NavigationStack` containing a `Form` with up to four sections:\n- A bug description section with a text editor\n- An optional custom fields section (if configured)\n- An optional pre-filled data section (if enabled and data exists)\n- An optional log files information section (if enabled and log files data exists)\n\nAll text content is localized using the `localized()` extension, and sections\nare conditionally displayed based on the configuration settings. The log files\nsection displays information about log files that will be automatically included\nin the bug report for debugging purposes.\n\nA \"Send\" button is added to the trailing navigation bar item that handles report submission.",
            "key.doc.declaration" : "@MainActor public var body: some View { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The body creates a `NavigationStack` containing a `Form` with up to four sections:"
              },
              {
                "List-Bullet" : ""
              },
              {
                "Para" : "All text content is localized using the `localized()` extension, and sections are conditionally displayed based on the configuration settings. The log files section displays information about log files that will be automatically included in the bug report for debugging purposes."
              },
              {
                "Para" : "A “Send” button is added to the trailing navigation bar item that handles report submission."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift\" line=\"143\" column=\"16\"><Name>body<\/Name><USR>s:14SimpleLoggerUI16ReporterFormViewV4bodyQrvp<\/USR><Declaration>@MainActor public var body: some View { get }<\/Declaration><CommentParts><Abstract><Para>The main view body that renders the bug reporting form.<\/Para><\/Abstract><Discussion><Para>The body creates a <codeVoice>NavigationStack<\/codeVoice> containing a <codeVoice>Form<\/codeVoice> with up to four sections:<\/Para><List-Bullet><Item><Para>A bug description section with a text editor<\/Para><\/Item><Item><Para>An optional custom fields section (if configured)<\/Para><\/Item><Item><Para>An optional pre-filled data section (if enabled and data exists)<\/Para><\/Item><Item><Para>An optional log files information section (if enabled and log files data exists)<\/Para><\/Item><\/List-Bullet><Para>All text content is localized using the <codeVoice>localized()<\/codeVoice> extension, and sections are conditionally displayed based on the configuration settings. The log files section displays information about log files that will be automatically included in the bug report for debugging purposes.<\/Para><Para>A “Send” button is added to the trailing navigation bar item that handles report submission.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 143,
            "key.doc.name" : "body",
            "key.doc.type" : "Other",
            "key.doclength" : 869,
            "key.docoffset" : 4895,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>body<\/decl.name>: <decl.var.type><syntaxtype.keyword>some<\/syntaxtype.keyword> <ref.protocol usr=\"s:7SwiftUI4ViewP\">View<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 3655,
            "key.line" : 143,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "body",
            "key.namelength" : 4,
            "key.nameoffset" : 5779,
            "key.offset" : 5775,
            "key.overrides" : [
              {
                "key.usr" : "s:7SwiftUI4ViewP4body4BodyQzvp"
              }
            ],
            "key.parsed_declaration" : "public var body: some View",
            "key.parsed_scope.end" : 233,
            "key.parsed_scope.start" : 143,
            "key.reusingastcontext" : false,
            "key.typename" : "some View",
            "key.typeusr" : "$sQrD",
            "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV4bodyQrvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>@<Type usr=\"s:ScM\">MainActor<\/Type> private func handleSendReport()<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 10324
              }
            ],
            "key.bodylength" : 782,
            "key.bodyoffset" : 10357,
            "key.column" : 18,
            "key.decl_lang" : "source.lang.swift",
            "key.doc_comment" : "Handles the send report action by calling the custom action closure provided in the configuration.\n\nThis method collects all form data and passes it to the custom action closure\nprovided in the configuration. The configuration must include a `sendAction` closure\nto handle the report submission.\n\nThe following data is collected and passed to the action:\n- Issue description text from the text editor\n- Pre-filled data (if `sendPreFilledData` is enabled)\n- Custom field values\n- Log file statistics and files (count, total size, and file data)\n\n## Important\nThe configuration's `sendAction` closure must be set, as there is no default\nsend report implementation. If no custom action is provided, the method will\nexecute without performing any send operation.",
            "key.doc.column" : 18,
            "key.doc.comment" : "Handles the send report action by calling the custom action closure provided in the configuration.\n\nThis method collects all form data and passes it to the custom action closure\nprovided in the configuration. The configuration must include a `sendAction` closure\nto handle the report submission.\n\nThe following data is collected and passed to the action:\n- Issue description text from the text editor\n- Pre-filled data (if `sendPreFilledData` is enabled)\n- Custom field values\n- Log file statistics and files (count, total size, and file data)\n\n## Important\nThe configuration's `sendAction` closure must be set, as there is no default\nsend report implementation. If no custom action is provided, the method will\nexecute without performing any send operation.",
            "key.doc.declaration" : "@MainActor private func handleSendReport()",
            "key.doc.discussion" : [
              {
                "Para" : "This method collects all form data and passes it to the custom action closure provided in the configuration. The configuration must include a `sendAction` closure to handle the report submission."
              },
              {
                "Para" : "The following data is collected and passed to the action:"
              },
              {
                "List-Bullet" : ""
              },
              {
                "Para" : "The configuration’s `sendAction` closure must be set, as there is no default send report implementation. If no custom action is provided, the method will execute without performing any send operation."
              }
            ],
            "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift\" line=\"251\" column=\"18\"><Name>handleSendReport()<\/Name><USR>s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF<\/USR><Declaration>@MainActor private func handleSendReport()<\/Declaration><CommentParts><Abstract><Para>Handles the send report action by calling the custom action closure provided in the configuration.<\/Para><\/Abstract><Discussion><Para>This method collects all form data and passes it to the custom action closure provided in the configuration. The configuration must include a <codeVoice>sendAction<\/codeVoice> closure to handle the report submission.<\/Para><Para>The following data is collected and passed to the action:<\/Para><List-Bullet><Item><Para>Issue description text from the text editor<\/Para><\/Item><Item><Para>Pre-filled data (if <codeVoice>sendPreFilledData<\/codeVoice> is enabled)<\/Para><\/Item><Item><Para>Custom field values<\/Para><\/Item><Item><Para>Log file statistics and files (count, total size, and file data)<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<h2>]]><\/rawHTML>Important<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The configuration’s <codeVoice>sendAction<\/codeVoice> closure must be set, as there is no default send report implementation. If no custom action is provided, the method will execute without performing any send operation.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 251,
            "key.doc.name" : "handleSendReport()",
            "key.doc.type" : "Function",
            "key.doclength" : 880,
            "key.docoffset" : 9440,
            "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@<ref.class usr=\"s:ScM\">MainActor<\/ref.class><\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>handleSendReport<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 808,
            "key.line" : 251,
            "key.modulename" : "SimpleLoggerUI",
            "key.name" : "handleSendReport()",
            "key.namelength" : 18,
            "key.nameoffset" : 10337,
            "key.offset" : 10332,
            "key.parsed_declaration" : "private func handleSendReport()",
            "key.parsed_scope.end" : 269,
            "key.parsed_scope.start" : 251,
            "key.reusingastcontext" : false,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let customFieldValues: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>customFieldValues<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 60,
                "key.line" : 261,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "customFieldValues",
                "key.namelength" : 17,
                "key.nameoffset" : 10612,
                "key.offset" : 10608,
                "key.parsed_declaration" : "let customFieldValues = configuration.getCustomFieldValues()",
                "key.parsed_scope.end" : 261,
                "key.parsed_scope.start" : 261,
                "key.reusingastcontext" : false,
                "key.typename" : "[String : String]",
                "key.typeusr" : "$sSDyS2SGD",
                "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF17customFieldValuesL_SDyS2SGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let preFilledDataToSend: [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>preFilledDataToSend<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 93,
                "key.line" : 262,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "preFilledDataToSend",
                "key.namelength" : 19,
                "key.nameoffset" : 10681,
                "key.offset" : 10677,
                "key.parsed_declaration" : "let preFilledDataToSend = configuration.sendPreFilledData ? configuration.preFilledData : [:]",
                "key.parsed_scope.end" : 262,
                "key.parsed_scope.start" : 262,
                "key.reusingastcontext" : false,
                "key.typename" : "[String : String]",
                "key.typeusr" : "$sSDyS2SGD",
                "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF015preFilledDataToH0L_SDyS2SGvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let logCount: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.column" : 14,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logCount<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.line" : 263,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "logCount",
                "key.namelength" : 8,
                "key.nameoffset" : 10784,
                "key.offset" : 10779,
                "key.parsed_declaration" : "let (logCount, logSize) = Logger.logFileStats()",
                "key.parsed_scope.end" : 263,
                "key.parsed_scope.start" : 263,
                "key.reusingastcontext" : false,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF8logCountL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let logSize: <Type usr=\"s:Si\">Int<\/Type><\/Declaration>",
                "key.column" : 24,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logSize<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 47,
                "key.line" : 263,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "logSize",
                "key.namelength" : 7,
                "key.nameoffset" : 10794,
                "key.offset" : 10779,
                "key.parsed_declaration" : "let (logCount, logSize) = Logger.logFileStats()",
                "key.parsed_scope.end" : 263,
                "key.parsed_scope.start" : 263,
                "key.reusingastcontext" : false,
                "key.typename" : "Int",
                "key.typeusr" : "$sSiD",
                "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF7logSizeL_Sivp"
              },
              {
                "key.annotated_decl" : "<Declaration>let logs: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>?<\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logs<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 31,
                "key.line" : 264,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "logs",
                "key.namelength" : 4,
                "key.nameoffset" : 10839,
                "key.offset" : 10835,
                "key.parsed_declaration" : "let logs = Logger.gatherFiles()",
                "key.parsed_scope.end" : 264,
                "key.parsed_scope.start" : 264,
                "key.reusingastcontext" : false,
                "key.typename" : "Data?",
                "key.typeusr" : "$s10Foundation4DataVSgD",
                "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF4logsL_10Foundation4DataVSgvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let logStats: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.column" : 13,
                "key.decl_lang" : "source.lang.swift",
                "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logStats<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 83,
                "key.line" : 265,
                "key.modulename" : "SimpleLoggerUI",
                "key.name" : "logStats",
                "key.namelength" : 8,
                "key.nameoffset" : 10879,
                "key.offset" : 10875,
                "key.parsed_declaration" : "let logStats = \"\\(logCount) files (\\(logSize.formatted(.byteCount(style: .file))))\"",
                "key.parsed_scope.end" : 265,
                "key.parsed_scope.start" : 265,
                "key.reusingastcontext" : false,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF8logStatsL_SSvp"
              }
            ],
            "key.typename" : "(ReporterFormView) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV16handleSendReport33_F249316DE1000F329B4B271A5A79D86DLLyyF"
          }
        ],
        "key.typename" : "ReporterFormView.Type",
        "key.typeusr" : "$s14SimpleLoggerUI16ReporterFormViewVmD",
        "key.usr" : "s:14SimpleLoggerUI16ReporterFormViewV"
      },
      {
        "key.annotated_decl" : "<Declaration>let config: <Type usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/Type><\/Declaration>",
        "key.column" : 9,
        "key.decl_lang" : "source.lang.swift",
        "key.doc_comment" : "Preview configuration for development and testing.",
        "key.doc.column" : 9,
        "key.doc.comment" : "Preview configuration for development and testing.",
        "key.doc.declaration" : "let config: SimpleLoggerUI.ReporterViewConfiguration",
        "key.doc.file" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift\" line=\"275\" column=\"9\"><Name>config<\/Name><USR>s:14SimpleLoggerUI05SwiftC04View_pycfU_6configL_AA08ReporterE13ConfigurationCvp<\/USR><Declaration>let config: SimpleLoggerUI.ReporterViewConfiguration<\/Declaration><CommentParts><Abstract><Para>Preview configuration for development and testing.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 275,
        "key.doc.name" : "config",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/pedrocavaleiro\/Repos\/Personal\/SimpleLogger\/Sources\/SimpleLoggerUI\/Views\/ReporterFormView.swift",
        "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>config<\/decl.name>: <decl.var.type><ref.class usr=\"s:14SimpleLoggerUI25ReporterViewConfigurationC\">ReporterViewConfiguration<\/ref.class><\/decl.var.type><\/decl.var.local>",
        "key.kind" : "source.lang.swift.decl.var.local",
        "key.length" : 6,
        "key.line" : 275,
        "key.modulename" : "SimpleLoggerUI",
        "key.name" : "config",
        "key.offset" : 11227,
        "key.parsed_declaration" : "let config",
        "key.parsed_scope.end" : 275,
        "key.parsed_scope.start" : 275,
        "key.reusingastcontext" : false,
        "key.typename" : "ReporterViewConfiguration",
        "key.typeusr" : "$s14SimpleLoggerUI25ReporterViewConfigurationCD",
        "key.usr" : "s:14SimpleLoggerUI05SwiftC04View_pycfU_6configL_AA08ReporterE13ConfigurationCvp"
      }
    ]
  }
}]
