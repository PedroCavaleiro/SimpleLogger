//
//  PreFilledDataComponent.swift
//  SimpleLogger
//
//  Created by Pedro Cavaleiro on 14/09/2025.
//
//  Docs Generated by Claude Sonnet 4
//

import SwiftUI

/// A SwiftUI component that displays a label-value pair in a horizontal layout.
///
/// `PreFilledDataComponent` is a generic view that presents two views side by side:
/// a label on the left and a value on the right, separated by a spacer. This component
/// is useful for displaying key-value pairs, form fields, or any other data that needs
/// to be presented in a structured horizontal format.
///
/// ## Usage
///
/// ```swift
/// PreFilledDataComponent {
///     Text("Name:")
/// } value: {
///     Text("John Doe")
/// }
/// ```
///
/// ## Topics
///
/// ### Creating a PreFilled Data Component
///
/// - ``init(label:value:)``
///
/// ### Views
///
/// - ``body``
public struct PreFilledDataComponent<Label: View, Value: View>: View {
    
    /// The view builder closure that creates the label content.
    let label: () -> Label
    
    /// The view builder closure that creates the value content.
    let value: () -> Value
    
    /// Creates a new pre-filled data component with the specified label and value views.
    ///
    /// Use this initializer to create a component that displays a label on the left
    /// and a value on the right, with automatic spacing between them.
    ///
    /// - Parameters:
    ///   - label: A view builder closure that returns the label view to display on the left.
    ///   - value: A view builder closure that returns the value view to display on the right.
    ///
    /// ## Example
    ///
    /// ```swift
    /// PreFilledDataComponent {
    ///     HStack {
    ///         Image(systemName: "person")
    ///         Text("User")
    ///     }
    /// } value: {
    ///     Text("admin@example.com")
    ///         .foregroundColor(.secondary)
    /// }
    /// ```
    public init(label: @escaping () -> Label, value: @escaping () -> Value) {
        self.label = label
        self.value = value
    }
    
    /// The view body that renders the label and value in a horizontal stack.
    ///
    /// The body creates an `HStack` containing the label view, a spacer for automatic
    /// spacing, and the value view. This ensures the label is left-aligned and the
    /// value is right-aligned within the available space.
    public var body: some View {
        HStack {
            label()
            Spacer()
            value()                
        }
    }
    
}
