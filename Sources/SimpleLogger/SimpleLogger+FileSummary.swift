//
//  SimpleLogger+FileSmmary.swift
//  SimpleLogger
//
//  Created by Pedro Cavaleiro on 11/09/2025.
//
//  Docs Generated by Claude Sonnet 4
//

import Foundation

/// Log file summary model providing comprehensive log file analysis and statistical information.
///
/// `LogFileSummary` represents comprehensive log file metadata with statistical analysis, file
/// information, and log level distribution tracking. It provides essential log file management,
/// analysis capabilities, and monitoring coordination for comprehensive logging system administration
/// and log file analysis workflows.
///
/// ## Features
///
/// - **File Metadata**: Complete file information including name, size, and modification tracking
/// - **Statistical Analysis**: Log level distribution and count analysis for log file insights
/// - **File Management**: Log file organization and metadata tracking for administration
/// - **Analysis Coordination**: Log file analysis capabilities and statistical monitoring
/// - **System Monitoring**: Log file health monitoring and analysis coordination
/// - **Administrative Support**: Log file management and analysis for system administration
///
/// ## Usage Context
///
/// This model is used throughout the application for log file management, analysis coordination,
/// and logging system administration. It provides essential log file metadata for monitoring
/// interfaces and integrates with logging systems for comprehensive log file analysis and management.
///
/// ## Environment Requirements
///
/// - Requires Foundation framework for core data structures and file system integration
/// - Integrates with Logging system for log level classification and analysis
/// - Compatible with file system APIs for file metadata and size tracking
/// - Supports log file analysis and administrative management workflows
///
/// ## Properties
///
/// - `fileName`: String containing log file name for identification and management
/// - `size`: Integer containing log file size in bytes for file management analysis
/// - `lastModified`: Date containing file modification timestamp for tracking coordination
/// - `levelCounts`: Dictionary containing log level distribution for statistical analysis
///
/// ## Initialization Parameters
///
/// - Parameter fileName: String containing log file name for identification and management
/// - Parameter size: Integer containing log file size in bytes for file analysis
/// - Parameter lastModified: Date containing file modification timestamp for tracking
/// - Parameter levelCounts: Dictionary containing log level distribution for statistical coordination
public struct LogFileSummary {
    
    /// Log file name providing identification and file management coordination.
    ///
    /// This string property contains the log file name for file identification, enabling
    /// log file management, organization, and administrative coordination
    /// for comprehensive logging system administration and file tracking workflows.
    public let fileName: String
    
    /// Log file size providing file management analysis and storage coordination.
    ///
    /// This integer property contains the log file size in bytes for file management analysis,
    /// enabling storage monitoring, file size tracking, and administrative coordination
    /// for comprehensive log file management and system administration workflows.
    public let size: Int
    
    /// File modification timestamp providing file tracking and temporal coordination.
    ///
    /// This Date property contains the last modification timestamp for file tracking,
    /// enabling temporal coordination, modification monitoring, and file management
    /// analysis for comprehensive logging system administration and tracking workflows.
    public let lastModified: Date
    
    /// Log level distribution providing statistical analysis and log file insights.
    ///
    /// This dictionary property contains log level counts for statistical analysis and insights,
    /// enabling log level distribution tracking, analysis coordination, and log file
    /// monitoring for comprehensive logging system analysis and administrative workflows.
    public let levelCounts: [LogLevel: Int]
}
