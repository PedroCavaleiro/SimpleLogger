//
//  SimpleLogger+LogLevel.swift
//  SimpleLogger
//
//  Created by Pedro Cavaleiro on 11/09/2025.
//
//  Docs Generated by Claude Sonnet 4
//

/// Enumeration defining log severity levels for message categorization.
///
/// Provides hierarchical logging levels to enable appropriate filtering, display,
/// and processing of log messages based on their importance and context.
///
/// ## Log Levels
/// - **debug**: Detailed information for development and troubleshooting
/// - **info**: General informational messages about application flow
/// - **warning**: Potentially harmful situations that don't prevent operation
/// - **error**: Error conditions that may affect functionality
/// - **critical**: Severe errors that may cause application failure
///
/// Each level represents increasing severity and importance for system monitoring.
public enum LogLevel: String, Codable, CaseIterable, Identifiable {
    /// Debug level for detailed development and troubleshooting information.
    case debug = "DEBUG"
    /// Informational level for general application flow messages.
    case info = "INFO"
    /// Warning level for potentially harmful situations.
    case warning = "WARNING"
    /// Error level for error conditions affecting functionality.
    case error = "ERROR"
    /// Critical level for severe errors that may cause application failure.
    case critical = "CRITICAL"
    
    /// Unique identifier for the log level, using the raw string value.
    public var id: String { self.rawValue }
}
